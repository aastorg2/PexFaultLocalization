<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FP.Moles</name>
    </assembly>
    <members>
        <member name="T:FP.Core.CPS.Moles.MActionFailureException">
            <summary>Mole type of <see cref="T:FP.Core.CPS.ActionFailureException"/>
            .</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActionFailureException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActionFailureException.#ctor(FP.Core.CPS.ActionFailureException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActionFailureException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActionFailureException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActionFailureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActionFailureException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActionFailureException.Constructor">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.ActionFailureException.#ctor"/>
            </summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActionFailureException.ConstructorException">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.ActionFailureException.#ctor(T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActionFailureException.ConstructorString">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.ActionFailureException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActionFailureException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.ActionFailureException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:FP.Core.CPS.Moles.MActionFailureException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.CPS.Moles.MActions">
            <summary>Mole type of <see cref="T:FP.Core.CPS.Actions"/>
            .</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.FailException``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Exception,FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.Fail``1(T:System.Exception)"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.OrElseActionCPSOfTActionCPSOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},FP.Core.CPS.ActionCPS{``0},FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.OrElse``1(FP.Core.CPS.ActionCPS`1{``0},FP.Core.CPS.ActionCPS`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.ReturnT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.Return``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.RunActionCPSOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.Run``1(FP.Core.CPS.ActionCPS`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.RunRActionCPSOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},FP.Core.Result{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.RunR``1(FP.Core.CPS.ActionCPS`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.ThenActionCPSOfT1FuncOfT1ActionCPSOfT2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},System.Func{``0,FP.Core.CPS.ActionCPS{``1}},FP.Core.CPS.ActionCPS{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.Then``2(FP.Core.CPS.ActionCPS`1{``0},System.Func`2{``0,FP.Core.CPS.ActionCPS`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.WithDefaultActionCPSOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},``0,FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.WithDefault``1(FP.Core.CPS.ActionCPS`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.WithFinallyActionCPSOfTAction``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},System.Action,FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.WithFinally``1(FP.Core.CPS.ActionCPS`1{``0},T:System.Action)"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions.WithRescueActionCPSOfTFuncOfExceptionActionCPSOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.CPS.ActionCPS{``0},System.Func{System.Exception,FP.Core.CPS.ActionCPS{``0}},FP.Core.CPS.ActionCPS{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.WithRescue``1(FP.Core.CPS.ActionCPS`1{``0},System.Func`2{T:System.Exception,FP.Core.CPS.ActionCPS`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions._Runb__0T``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.&lt;Run&gt;b__0``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MActions._Runb__1Exception``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Exception,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.&lt;Run&gt;b__1``1(T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActions.TrueAfterInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.TrueAfter(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MActions.TrueAfterTimeSpan">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Actions.TrueAfter(T:System.TimeSpan)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.AdjustableRandomAccessSequences"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences.SetAtTSequenceInt32T``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,System.Int32,``0,``1})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.AdjustableRandomAccessSequences.SetAt``2(``1,T:System.Int32,``0)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MAdjustableRandomAccessSequences.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Util.Moles.MArrays">
            <summary>Mole type of <see cref="T:FP.Util.Arrays"/>
            .</summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.ContainsTArrayT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.Contains``1(``0[],``0)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.ContentEqualsTArrayTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],``0[],System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.ContentEquals``1(``0[],``0[])"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.CopyNoChecksTArrayInt32``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Int32,``0[]})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.CopyNoChecks``1(``0[],T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.CopyNoChecksTArrayInt32Int32``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Int32,System.Int32,``0[]})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.CopyNoChecks``1(``0[],T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.CopyTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],``0[]})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.Copy``1(``0[])"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.CopyTArrayInt32Int32``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Int32,System.Int32,``0[]})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.Copy``1(``0[],T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.Empty``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[]})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.Empty``1"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.FoldLeftTArrayFuncOfATAA``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Func{``1,``0,``1},``1,``1})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.FoldLeft``2(``0[],System.Func`3{``1,``0,``1},``1)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.FoldRightTArrayFuncOfTAAA``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Func{``0,``1,``1},``1,``1})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.FoldRight``2(``0[],System.Func`3{``0,``1,``1},``1)"/>
            </summary>
        </member>
        <member name="M:FP.Util.Moles.MArrays.ReverseIteratorTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Util.Arrays.ReverseIterator``1(``0[])"/>
            </summary>
        </member>
        <member name="P:FP.Util.Moles.MArrays.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Combinators.Moles.MCombinators">
            <summary>Mole type of <see cref="T:FP.Core.Combinators.Combinators"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.IntoTFuncOfTR``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Func{``0,``1},``1})">
            <summary>Sets the mole of <see cref="M:FP.Core.Combinators.Combinators.Into``2(``0,System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.TapTActionOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Combinators.Combinators.Tap``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Combinators.Moles.MCombinators.TapTFuncOfTR``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Func{``0,``1},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Combinators.Combinators.Tap``2(``0,System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Combinators.Moles.MCombinators.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MComparers">
            <summary>Mole type of <see cref="T:FP.Core.Comparers"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.MaxIComparerOfTTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IComparer{``0},``0[],``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.Max``1(System.Collections.Generic.IComparer`1{``0},``0[])"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.MinIComparerOfTTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IComparer{``0},``0[],``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.Min``1(System.Collections.Generic.IComparer`1{``0},``0[])"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.ReverseIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IComparer{``0},System.Collections.Generic.IComparer{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.Reverse``1(System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.ToComparerComparisonOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Comparison{``0},System.Collections.Generic.IComparer{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.ToComparer``1(System.Comparison`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.ToComparisonIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IComparer{``0},System.Comparison{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.ToComparison``1(System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MComparers.ToEqualityComparerIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Comparers.ToEqualityComparer``1(System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MComparers.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.CPS.Moles.MCont`1">
            <summary>Mole type of <see cref="T:FP.Core.CPS.Cont`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MCont`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MCont`1.#ctor(FP.Core.CPS.Cont{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MCont`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.MCont`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MCont`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.MCont`1.ConstructorActionOfTActionOfException">
            <summary>Sets the mole of <see cref="M:FP.Core.CPS.Cont`1.#ctor(System.Action`1{`1},System.Action`1{T:System.Exception})"/>
            </summary>
        </member>
        <member name="T:FP.Core.CPS.Moles.MCont`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Linq.Moles.MContinuationMonad">
            <summary>Mole type of <see cref="T:FP.Linq.ContinuationMonad"/>
            .</summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.SelectContinuationOfT1RFuncOfT1T2``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Continuation{``0,``2},System.Func{``0,``1},FP.Core.Continuation{``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ContinuationMonad.Select``3(FP.Core.Continuation`2{``0,``2},System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.SelectManyContinuationOfT1RFuncOfT1ContinuationOfT2R``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Continuation{``0,``2},System.Func{``0,FP.Core.Continuation{``1,``2}},FP.Core.Continuation{``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ContinuationMonad.SelectMany``3(FP.Core.Continuation`2{``0,``2},System.Func`2{``0,FP.Core.Continuation`2{``1,``2}})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad.SelectManyContinuationOfT1RFuncOfT1ContinuationOfT2RFuncOfT1T2T3``4(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Continuation{``0,``3},System.Func{``0,FP.Core.Continuation{``1,``3}},System.Func{``0,``1,``2},FP.Core.Continuation{``2,``3}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ContinuationMonad.SelectMany``4(FP.Core.Continuation`2{``0,``3},System.Func`2{``0,FP.Core.Continuation`2{``1,``3}},System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MContinuationMonad._Selectb__0T2``3(Microsoft.Moles.Framework.MolesDelegates.Func{``1,FP.Core.Continuation{``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ContinuationMonad.&lt;Select&gt;b__0``3(``1)"/>
            </summary>
        </member>
        <member name="P:FP.Linq.Moles.MContinuationMonad.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MContinuations">
            <summary>Mole type of <see cref="T:FP.Core.Continuations"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.CallCCFuncOfFuncOfT1ContinuationOfT2RContinuationOfT1R``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{System.Func{``0,FP.Core.Continuation{``1,``2}},FP.Core.Continuation{``0,``2}},FP.Core.Continuation{``0,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Continuations.CallCC``3(System.Func`2{System.Func`2{``0,FP.Core.Continuation`2{``1,``2}},FP.Core.Continuation`2{``0,``2}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.FromArgumentT``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Continuation{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Continuations.FromArgument``2(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.MapContinuationOfTRFuncOfRR``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Continuation{``0,``1},System.Func{``1,``1},FP.Core.Continuation{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Continuations.Map``2(FP.Core.Continuation`2{``0,``1},System.Func`2{``1,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.RunContinuationOfTRFuncOfTR``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Continuation{``0,``1},System.Func{``0,``1},``1})">
            <summary>Sets the mole of <see cref="M:FP.Core.Continuations.Run``2(FP.Core.Continuation`2{``0,``1},System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MContinuations.WrapT``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Continuation{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Continuations.Wrap``2(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MContinuations.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MDefaultComparer`1">
            <summary>Mole type of <see cref="T:FP.Core.DefaultComparer`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MDefaultComparer`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MDefaultComparer`1.#ctor(FP.Core.DefaultComparer{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MDefaultComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MDefaultComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MDefaultComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MDefaultComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MDefaultComparer`1.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.DefaultComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MDefaultComparer`1.Constructor">
            <summary>Sets the mole of <see cref="M:FP.Core.DefaultComparer`1.#ctor"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MDefaultComparer`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MDefaultComparer`1.AllInstances.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.DefaultComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MDictionaries">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Dictionaries"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.AddAllTDictionaryIEnumerableOfTupleOfTKeyTValue``3(Microsoft.Moles.Framework.MolesDelegates.Func{``2,System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}},``2})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Dictionaries.AddAll``3(``2,System.Collections.Generic.IEnumerable`1{FP.Core.Tuple`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.AddAllTDictionaryIEnumerableOfTupleOfTKeyTValueFuncOfTKeyTValueTValueTValue``3(Microsoft.Moles.Framework.MolesDelegates.Func{``2,System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}},System.Func{``0,``1,``1,``1},``2})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Dictionaries.AddAll``3(``2,System.Collections.Generic.IEnumerable`1{FP.Core.Tuple`2{``0,``1}},System.Func`4{``0,``1,``1,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.UpdateAllTDictionaryIEnumerableOfTKeyFuncOfTKeyTValueOptionalOfTValue``3(Microsoft.Moles.Framework.MolesDelegates.Func{``2,System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1,FP.Core.Optional{``1}},``2})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Dictionaries.UpdateAll``3(``2,System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``1,FP.Core.Optional`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MDictionaries.UpdateTDictionaryTKeyFuncOfTValueOptionalOfTValue``3(Microsoft.Moles.Framework.MolesDelegates.Func{``2,``0,System.Func{``1,FP.Core.Optional{``1}},``2})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Dictionaries.Update``3(``2,``0,System.Func`2{``1,FP.Core.Optional`1{``1}})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MDictionaries.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MEither">
            <summary>Mole type of <see cref="T:FP.Core.Either"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither.LeftL``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Either{``0,``1}.Left})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either.Left``2(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEither.RightR``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,FP.Core.Either{``0,``1}.Right})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either.Right``2(``1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2">
            <summary>Mole type of <see cref="T:FP.Core.Either`2"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.#ctor(FP.Core.Either{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.Bind(System.IEquatable{FP.Core.Either{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.Constructor">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.#ctor"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.EqualityOpEitherOfLREitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.op_Equality(FP.Core.Either`2{`1,`2},FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.ImplicitOpL">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.op_Implicit(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.ImplicitOpR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.op_Implicit(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.InequalityOpEitherOfLREitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.op_Inequality(FP.Core.Either`2{`1,`2},FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.GetHashCode"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2.MLeft">
            <summary>Mole type of <see cref="T:FP.Core.Either`2.Left"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.#ctor(FP.Core.Either{`0,`1}.Left)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.Bind(System.IEquatable{FP.Core.Either{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.Bind(System.IEquatable{FP.Core.Either{`0,`1}.Left})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.MatchFuncOfLResFuncOfRRes``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0},System.Func{`1,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Match``1(System.Func`2{`1,``0},System.Func`2{`2,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.ConstructorL">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.EqualityOpEitherLeftOfLREitherLeftOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.op_Equality(FP.Core.Either`2.Left{`1,`2},FP.Core.Either`2.Left{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.EqualsEitherLeftOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(FP.Core.Either`2.Left{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.EqualsEitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.InequalityOpEitherLeftOfLREitherLeftOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.op_Inequality(FP.Core.Either`2.Left{`1,`2},FP.Core.Either`2.Left{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.IsRightGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.IsRight"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.LeftValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.LeftValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.MatchActionOfLActionOfR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.RightValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.RightValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft._Equalsb__0L">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.&lt;Equals&gt;b__0(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft._Equalsb__1R">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.&lt;Equals&gt;b__1(`2)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2.MLeft.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MLeft.AllInstances.MatchFuncOfLResFuncOfRRes``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Either{`0,`1}.Left,System.Func{`0,``0},System.Func{`1,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Match``1(System.Func`2{`1,``0},System.Func`2{`2,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.EqualsEitherLeftOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(FP.Core.Either`2.Left{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.EqualsEitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.IsRightGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.IsRight"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.LeftValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.LeftValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.MatchActionOfLActionOfR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.RightValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.RightValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Left.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MLeft.AllInstances._Equalsb__0L">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Left.&lt;Equals&gt;b__0(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2.MRight">
            <summary>Mole type of <see cref="T:FP.Core.Either`2.Right"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.#ctor(FP.Core.Either{`0,`1}.Right)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.Bind(System.IEquatable{FP.Core.Either{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.Bind(System.IEquatable{FP.Core.Either{`0,`1}.Right})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.MatchFuncOfLResFuncOfRRes``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0},System.Func{`1,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Match``1(System.Func`2{`1,``0},System.Func`2{`2,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.ConstructorR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.#ctor(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.EqualityOpEitherRightOfLREitherRightOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.op_Equality(FP.Core.Either`2.Right{`1,`2},FP.Core.Either`2.Right{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.EqualsEitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.EqualsEitherRightOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(FP.Core.Either`2.Right{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.InequalityOpEitherRightOfLREitherRightOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.op_Inequality(FP.Core.Either`2.Right{`1,`2},FP.Core.Either`2.Right{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.IsRightGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.IsRight"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.LeftValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.LeftValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.MatchActionOfLActionOfR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.RightValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.RightValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight._Equalsb__3L">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.&lt;Equals&gt;b__3(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight._Equalsb__4R">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.&lt;Equals&gt;b__4(`2)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEither01`2.MRight.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MEither01`2.MRight.AllInstances.MatchFuncOfLResFuncOfRRes``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Either{`0,`1}.Right,System.Func{`0,``0},System.Func{`1,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Match``1(System.Func`2{`1,``0},System.Func`2{`2,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.EqualsEitherOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.EqualsEitherRightOfLR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(FP.Core.Either`2.Right{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.IsRightGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.IsRight"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.LeftValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.LeftValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.MatchActionOfLActionOfR">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.RightValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.RightValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Either`2.Right.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEither01`2.MRight.AllInstances._Equalsb__4R">
            <summary>Sets the mole of <see cref="M:FP.Core.Either`2.Right.&lt;Equals&gt;b__4(`2)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MEnumerables">
            <summary>Mole type of <see cref="T:FP.Core.Enumerables"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.AppendIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Append``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ConcatIEnumerableOfIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Concat``1(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ConcatIEnumerableOfTIEnumerableOfIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Concat``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.CycleIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Cycle``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.DeleteIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Delete``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.DeleteIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Delete``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Find``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Find``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIndexIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FindIndex``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIndexIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Int32})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FindIndex``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIndexesIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{System.Int32}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FindIndexes``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FindIndexesIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{System.Int32}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FindIndexes``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FoldRightIEnumerableOfTFuncOfTTAccTAccTAcc``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1,``1},``1,``1})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FoldRight``2(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``1,``1},``1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.FoldRightIEnumerableOfTFuncOfTTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.FoldRight``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``0,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ForEachIEnumerableOfTActionOfT``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ForEach``1(System.Collections.Generic.IEnumerable`1{``0},System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.InitIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Init``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IntercalateIEnumerableOfIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Intercalate``1(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{``0}},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IntersperseIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Intersperse``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IsEmptyIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.IsEmpty``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IsPrefixOfIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.IsPrefixOf``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IsSuffixOfIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.IsSuffixOf``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.IterateFuncOfTTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``0},``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Iterate``1(System.Func`2{``0,``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaxIEnumerableOfTIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Max``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeElementAtIEnumerableOfTInt32``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32,FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeElementAt``1(System.Collections.Generic.IEnumerable`1{``0},T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFindIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFind``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFindIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFind``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFindIndexIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},FP.Core.Optional{System.Int32}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFindIndex``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFindIndexIEnumerableOfTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0,FP.Core.Optional{System.Int32}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFindIndex``1(System.Collections.Generic.IEnumerable`1{``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFirstIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFirst``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeFirstIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeFirst``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeLastIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeLast``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeLastIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeLast``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeSingleIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeSingle``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MaybeSingleIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.MaybeSingle``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.MinIEnumerableOfTIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Min``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ReplicateTInt32``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Replicate``1(``0,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.RunsIEnumerableOfTFuncOfTTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Runs``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.RunsIEnumerableOfTFuncOfTTKey``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``0,``1}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Runs``2(System.Collections.Generic.IEnumerable`1{``1},System.Func`2{``1,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.RunsIEnumerableOfTFuncOfTTKeyIEqualityComparerOfTKey``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{System.Linq.IGrouping{``0,``1}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Runs``2(System.Collections.Generic.IEnumerable`1{``1},System.Func`2{``1,``0},System.Collections.Generic.IEqualityComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ScanLeftIEnumerableOfTFuncOfTTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ScanLeft``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``0,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ScanLeftIEnumerableOfTTAccFuncOfTAccTTAcc``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ScanLeft``2(System.Collections.Generic.IEnumerable`1{``0},``1,System.Func`3{``1,``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ScanRightIEnumerableOfTFuncOfTTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ScanRight``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``0,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ScanRightIEnumerableOfTTAccFuncOfTTAccTAcc``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``1,System.Func{``0,``1,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ScanRight``2(System.Collections.Generic.IEnumerable`1{``0},``1,System.Func`3{``0,``1,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.SortDescendingIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.SortDescending``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.SortDescendingIEnumerableOfTIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.SortDescending``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.SortIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Sort``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.SortIEnumerableOfTIComparerOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Sort``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.StripPrefixIEnumerableOfTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.StripPrefix``1(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.TailIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Tail``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ToLazyListIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Collections.Persistent.LazyList{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ToLazyList``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ToLazyListIEnumeratorOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerator{``0},FP.Collections.Persistent.LazyList{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ToLazyList``1(System.Collections.Generic.IEnumerator`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.TransposeIEnumerableOfIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Transpose``1(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.UnZip1IEnumerableOfTupleOfT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.UnZip1``2(System.Collections.Generic.IEnumerable`1{FP.Core.Tuple`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.UnZip2IEnumerableOfTupleOfT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.UnZip2``2(System.Collections.Generic.IEnumerable`1{FP.Core.Tuple`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.UnZipIEnumerableOfTupleOfT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}},FP.Core.Tuple{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.UnZip``2(System.Collections.Generic.IEnumerable`1{FP.Core.Tuple`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.UnfoldFuncOfTStateNullableOfTupleOfTTStateTState``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``1,System.Nullable{FP.Core.Tuple{``0,``1}}},``1,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Unfold``2(System.Func`2{``1,System.Nullable`1{FP.Core.Tuple`2{``0,``1}}},``1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.WithIndexIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{FP.Core.Tuple{System.Int32,``0}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.WithIndex``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipIEnumerableOfT1IEnumerableOfT2``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Zip``2(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipIEnumerableOfT1IEnumerableOfT2IEnumerableOfT3``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1,``2}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Zip``3(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipIEnumerableOfT1IEnumerableOfT2IEnumerableOfT3IEnumerableOfT4``4(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{``3},System.Collections.Generic.IEnumerable{FP.Core.Tuple{``0,``1,``2,``3}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Zip``4(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2},System.Collections.Generic.IEnumerable`1{``3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipWithIEnumerableOfT1IEnumerableOfT2FuncOfT1T2T``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2},System.Collections.Generic.IEnumerable{``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ZipWith``3(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1},System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipWithIEnumerableOfT1IEnumerableOfT2IEnumerableOfT3FuncOfT1T2T3T``4(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Func{``0,``1,``2,``3},System.Collections.Generic.IEnumerable{``3}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ZipWith``4(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2},System.Func`4{``0,``1,``2,``3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables.ZipWithIEnumerableOfT1IEnumerableOfT2IEnumerableOfT3IEnumerableOfT4FuncOfT1T2T3T4T``5(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2},System.Collections.Generic.IEnumerable{``3},System.Func{``0,``1,``2,``3,``4},System.Collections.Generic.IEnumerable{``4}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.ZipWith``5(System.Collections.Generic.IEnumerable`1{``0},System.Collections.Generic.IEnumerable`1{``1},System.Collections.Generic.IEnumerable`1{``2},System.Collections.Generic.IEnumerable`1{``3},System.Func`5{``0,``1,``2,``3,``4})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._MaybeFirstb__bcT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;MaybeFirst&gt;b__bc``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._MaybeLastb__c0T``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;MaybeLast&gt;b__c0``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._MaybeSingleb__c4T``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;MaybeSingle&gt;b__c4``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._SortDescendingb__bbT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;SortDescending&gt;b__bb``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._Sortb__baT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;Sort&gt;b__ba``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerables._Transposeb__16IEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerator{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;Transpose&gt;b__16``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.AndIEnumerableOfBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.And(System.Collections.Generic.IEnumerable`1{T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.OrIEnumerableOfBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Or(System.Collections.Generic.IEnumerable`1{T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfDecimal">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{T:System.Decimal})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfDouble">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{T:System.Double})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{T:System.Int32})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfInt64">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{T:System.Int64})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfNullableOfDecimal">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{System.Nullable`1{T:System.Decimal}})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfNullableOfDouble">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{System.Nullable`1{T:System.Double}})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfNullableOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{System.Nullable`1{T:System.Int32}})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfNullableOfInt64">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{System.Nullable`1{T:System.Int64}})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfNullableOfSingle">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{System.Nullable`1{T:System.Single}})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables.ProductIEnumerableOfSingle">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.Product(System.Collections.Generic.IEnumerable`1{T:System.Single})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables._Andb__25Boolean">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;And&gt;b__25(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerables._Orb__27Boolean">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerables.&lt;Or&gt;b__27(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="T:FP.HaskellNames.Moles.MEnumerables2">
            <summary>Mole type of <see cref="T:FP.HaskellNames.Enumerables2"/>
            .</summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.ConsTIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.Cons``1(``0,System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.FilterIEnumerableOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.Filter``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.FoldLeftIEnumerableOfTFuncOfTAccTTAccTAcc``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``1,``0,``1},``1,``1})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.FoldLeft``2(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``1,``0,``1},``1)"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.FoldLeftIEnumerableOfTFuncOfTTT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.FoldLeft``1(System.Collections.Generic.IEnumerable`1{``0},System.Func`3{``0,``0,``0})"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.HeadIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.Head``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.LengthIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Int32})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.Length``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.HaskellNames.Moles.MEnumerables2.MapIEnumerableOfTFuncOfTTR``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.HaskellNames.Enumerables2.Map``2(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="P:FP.HaskellNames.Moles.MEnumerables2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MEnumerators">
            <summary>Mole type of <see cref="T:FP.Core.Enumerators"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.SkipIEnumeratorOfTInt32``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IEnumerator{``0},System.Int32})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.Skip``1(System.Collections.Generic.IEnumerator`1{``0},T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.SkipWhileIEnumeratorOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IEnumerator{``0},System.Func{``0,System.Boolean}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.SkipWhile``1(System.Collections.Generic.IEnumerator`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.SkipWhileIEnumeratorOfTFuncOfTInt32Boolean``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Collections.Generic.IEnumerator{``0},System.Func{``0,System.Int32,System.Boolean}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.SkipWhile``1(System.Collections.Generic.IEnumerator`1{``0},System.Func`3{``0,T:System.Int32,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.TakeIEnumeratorOfTInt32``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerator{``0},System.Int32,System.Collections.Generic.IEnumerator{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.Take``1(System.Collections.Generic.IEnumerator`1{``0},T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.TakeWhileIEnumeratorOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerator{``0},System.Func{``0,System.Boolean},System.Collections.Generic.IEnumerator{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.TakeWhile``1(System.Collections.Generic.IEnumerator`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MEnumerators.TakeWhileIEnumeratorOfTFuncOfTInt32Boolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerator{``0},System.Func{``0,System.Int32,System.Boolean},System.Collections.Generic.IEnumerator{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Enumerators.TakeWhile``1(System.Collections.Generic.IEnumerator`1{``0},System.Func`3{``0,T:System.Int32,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MEnumerators.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Validation.Moles.MFPValidationExtensions">
            <summary>Mole type of <see cref="T:FP.Validation.FPValidationExtensions"/>
            .</summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexAndCountInRangeValidationIRandomAccessOfTInt32Int32StringString``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,FP.Collections.Persistent.IRandomAccess{``0},System.Int32,System.Int32,System.String,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexAndCountInRange``1(T:FP.Validation.Validation,FP.Collections.Persistent.IRandomAccess`1{``0},T:System.Int32,T:System.Int32,T:System.String,T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexAndCountInRangeValidationRandomAccessSequenceOfTInt32Int32StringString``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,FP.Collections.Persistent.RandomAccessSequence{``0},System.Int32,System.Int32,System.String,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexAndCountInRange``1(T:FP.Validation.Validation,FP.Collections.Persistent.RandomAccessSequence`1{``0},T:System.Int32,T:System.Int32,T:System.String,T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexAndCountInRangeValidationTSeqInt32Int32StringString``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,``1,System.Int32,System.Int32,System.String,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexAndCountInRange``2(T:FP.Validation.Validation,``1,T:System.Int32,T:System.Int32,T:System.String,T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexInRangeValidationIRandomAccessOfTInt32String``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,FP.Collections.Persistent.IRandomAccess{``0},System.Int32,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexInRange``1(T:FP.Validation.Validation,FP.Collections.Persistent.IRandomAccess`1{``0},T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexInRangeValidationRandomAccessSequenceOfTInt32String``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,FP.Collections.Persistent.RandomAccessSequence{``0},System.Int32,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexInRange``1(T:FP.Validation.Validation,FP.Collections.Persistent.RandomAccessSequence`1{``0},T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Validation.Moles.MFPValidationExtensions.IsIndexInRangeValidationTSeqInt32String``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Validation.Validation,``1,System.Int32,System.String,FP.Validation.Validation})">
            <summary>Sets the mole of <see cref="M:FP.Validation.FPValidationExtensions.IsIndexInRange``2(T:FP.Validation.Validation,``1,T:System.Int32,T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Validation.Moles.MFPValidationExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MFunctions">
            <summary>Mole type of <see cref="T:FP.Core.Functions"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.ComposeFuncOfT1T2FuncOfT2T3``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1},System.Func{``1,``2},System.Func{``0,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Compose``3(System.Func`2{``0,``1},System.Func`2{``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.CurryFuncOfT1T2T3TR``4(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1,``2,``3},System.Func{``0,``1,System.Func{``2,``3}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Curry``4(System.Func`4{``0,``1,``2,``3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.CurryFuncOfT1T2TR``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1,``2},System.Func{``0,System.Func{``1,``2}}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Curry``3(System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.FlipFuncOfT1T2TR``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1,``2},System.Func{``1,``0,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Flip``3(System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.Id``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Id``1"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.MemoizeFuncOfR``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},System.Func{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Memoize``1(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.MemoizeFuncOfT1T2R``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1,``2},System.Func{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Memoize``3(System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.MemoizeFuncOfTR``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1},System.Func{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Memoize``2(System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.NotFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,System.Boolean},System.Func{``0,System.Boolean}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Not``1(System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.UncurryFuncOfT1FuncOfT2TR``3(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,System.Func{``1,``2}},System.Func{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Uncurry``3(System.Func`2{``0,System.Func`2{``1,``2}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions.UncurryFuncOfT1T2FuncOfT3TR``4(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,``1,System.Func{``2,``3}},System.Func{``0,``1,``2,``3}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.Uncurry``4(System.Func`3{``0,``1,System.Func`2{``2,``3}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctions._Idb__6T``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.&lt;Id&gt;b__6``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctions.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctions._cctorb__25">
            <summary>Sets the mole of <see cref="M:FP.Core.Functions.&lt;.cctor&gt;b__25"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MFunctorComparer`1">
            <summary>Mole type of <see cref="T:FP.Core.FunctorComparer`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorComparer`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorComparer`1.#ctor(FP.Core.FunctorComparer{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorComparer`1.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorComparer`1.ConstructorComparisonOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorComparer`1.#ctor(System.Comparison`1{`1})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MFunctorComparer`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorComparer`1.AllInstances.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MFunctorEqualityComparer`1">
            <summary>Mole type of <see cref="T:FP.Core.FunctorEqualityComparer`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorEqualityComparer`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorEqualityComparer`1.#ctor(FP.Core.FunctorEqualityComparer{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorEqualityComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorEqualityComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MFunctorEqualityComparer`1.Bind(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.ConstructorFuncOfTTBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorEqualityComparer`1.#ctor(System.Func`3{`1,`1,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.EqualsTT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorEqualityComparer`1.Equals(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.GetHashCodeT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorEqualityComparer`1.GetHashCode(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MFunctorEqualityComparer`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.AllInstances.EqualsTT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorEqualityComparer`1.Equals(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MFunctorEqualityComparer`1.AllInstances.GetHashCodeT">
            <summary>Sets the mole of <see cref="M:FP.Core.FunctorEqualityComparer`1.GetHashCode(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MGrouping`2">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Grouping`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.#ctor(FP.Collections.Persistent.Grouping{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.Bind(System.Linq.IGrouping{`0,`1})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MGrouping`2.Bind(System.Collections.Generic.IEnumerable{`1})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.ConstructorListOfEK">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Grouping`2.#ctor(System.Collections.Generic.List`1{`2},`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Grouping`2.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.KeyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Grouping`2.Key"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Grouping`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MGrouping`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.AllInstances.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Grouping`2.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.AllInstances.KeyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Grouping`2.Key"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MGrouping`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Grouping`2.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MImmutableLists">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.ImmutableLists"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MImmutableLists.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MImmutableLists.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MImmutableLists.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MImmutableLists.MatchTListActionActionOfTTList``2(Microsoft.Moles.Framework.MolesDelegates.Action{``1,System.Action,System.Action{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.ImmutableLists.Match``2(``1,T:System.Action,System.Action`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MImmutableLists.MatchTListFuncOfRFuncOfTTListR``3(Microsoft.Moles.Framework.MolesDelegates.Func{``1,System.Func{``2},System.Func{``0,``1,``2},``2})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.ImmutableLists.Match``3(``1,System.Func`1{``2},System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MImmutableLists.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MInts">
            <summary>Mole type of <see cref="T:FP.Core.Ints"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MInts.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MInts.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MInts.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.FromInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ints.From(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.FromInt32Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ints.From(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.RangeInt32Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ints.Range(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.RangeInt32Int32Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ints.Range(T:System.Int32,T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MInts.TimesInt32Action">
            <summary>Sets the mole of <see cref="M:FP.Core.Ints.Times(T:System.Int32,T:System.Action)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MLazy`1">
            <summary>Mole type of <see cref="T:FP.Core.Lazy`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy`1.#ctor(FP.Core.Lazy{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ConstructorFuncOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.#ctor(System.Func`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ConstructorT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ExplicitOpLazyOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.op_Explicit(FP.Core.Lazy`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.Force">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.Force"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ImplicitOpFuncOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.op_Implicit(System.Func`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ImplicitOpLazyOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.op_Implicit(FP.Core.Lazy`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ImplicitOpT">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.op_Implicit(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.IsCompletedGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Lazy`1.IsCompleted"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ToString">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Lazy`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MLazy`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.AllInstances.Force">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.Force"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.AllInstances.IsCompletedGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Lazy`1.IsCompleted"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy`1.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy`1.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Lazy`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MLazy01">
            <summary>Mole type of <see cref="T:FP.Core.Lazy"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy01.NewFuncOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},FP.Core.Lazy{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy.New``1(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MLazy01.NewT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Lazy{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Lazy.New``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MLazy01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MLazyList`1">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.LazyList`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.#ctor(FP.Collections.Persistent.LazyList{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.Bind(FP.Collections.Persistent.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.Bind(FP.Collections.Persistent.IList{`0,FP.Collections.Persistent.LazyList{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLazyList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.ConstructorTIEnumeratorOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.#ctor(`1,System.Collections.Generic.IEnumerator`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.ConstructorTLazyListOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.#ctor(`1,FP.Collections.Persistent.LazyList`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.CreateIEnumeratorOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.Create(System.Collections.Generic.IEnumerator`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.HeadGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.Head"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.PrependT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.Prepend(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.TailGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.Tail"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.HeadGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.Head"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.PrependT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.Prepend(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.LazyList`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLazyList`1.AllInstances.TailGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.LazyList`1.Tail"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MLists">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Lists"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.ConsTTList``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,``1})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Lists.Cons``2(``0,``1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.FirstTList``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,``0})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Lists.First``2(``1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.SkipTListInt32``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,System.Int32,``1})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Lists.Skip``2(``1,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.SkipWhileTListFuncOfTBoolean``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,System.Func{``0,System.Boolean},``1})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Lists.SkipWhile``2(``1,System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MLists.SkipWhileTListFuncOfTInt32Boolean``2(Microsoft.Moles.Framework.MolesDelegates.Func{``1,System.Func{``0,System.Int32,System.Boolean},``1})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Lists.SkipWhile``2(``1,System.Func`3{``0,T:System.Int32,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MLists.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MMonoid`1">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Monoid`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoid`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoid`1.#ctor(FP.Collections.Persistent.Monoid{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoid`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoid`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.ConstructorTFuncOfTTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.#ctor(`1,System.Func`3{`1,`1,`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.SumIEnumerableOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.SumTArray">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.SumTIEnumerableOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.SumTTArray">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,`1[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.SumTTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,`1,`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances.SumIEnumerableOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances.SumTArray">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances.SumTIEnumerableOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances.SumTTArray">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,`1[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoid`1.AllInstances.SumTTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoid`1.Sum(`1,`1,`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MMonoids">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Monoids"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoids.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoids.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoids.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoids.PriorityMPIComparerOfP``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Collections.Generic.IComparer{``0},FP.Collections.Persistent.Monoid{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoids.PriorityM``1(``0,System.Collections.Generic.IComparer`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MMonoids.ProductMonoidOfT1MonoidOfT2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.Monoid{``0},FP.Collections.Persistent.Monoid{``1},FP.Collections.Persistent.Monoid{FP.Core.Tuple{``0,``1}}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoids.Product``2(FP.Collections.Persistent.Monoid`1{``0},FP.Collections.Persistent.Monoid`1{``1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoids.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MMonoids._cctorb__6Int32Int32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Monoids.&lt;.cctor&gt;b__6(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MOptional`1">
            <summary>Mole type of <see cref="T:FP.Core.Optional`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.BitwiseOrOpOptionalOfTOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_BitwiseOr(FP.Core.Optional`1{`1},FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.EqualityOpOptionalOfTOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_Equality(FP.Core.Optional`1{`1},FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.ExplicitOpOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_Explicit(FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.FalseOpOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_False(FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.ImplicitOpT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_Implicit(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.InequalityOpOptionalOfTOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_Inequality(FP.Core.Optional`1{`1},FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1.TrueOpOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.op_True(FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional`1._GetHashCodeb__2T">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional`1.&lt;GetHashCode&gt;b__2(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MOptional`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MOptional01">
            <summary>Mole type of <see cref="T:FP.Core.Optional"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.FlattenOptionalOfOptionalOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{FP.Core.Optional{``0}},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.Flatten``1(FP.Core.Optional`1{FP.Core.Optional`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.MapSomeIEnumerableOfTFuncOfTOptionalOfR``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,FP.Core.Optional{``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.MapSome``2(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,FP.Core.Optional`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.None``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.None``1"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.SelectValuesIEnumerableOfOptionalOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Core.Optional{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.SelectValues``1(System.Collections.Generic.IEnumerable`1{FP.Core.Optional`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.SomeT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.Some``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.ToOptionalIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.ToOptional``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.TryFuncOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.Try``1(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01.TryFuncOfT01``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.Try``2(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptional01._Flattenb__1OptionalOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Optional.&lt;Flatten&gt;b__1``1(FP.Core.Optional`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptional01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Linq.Moles.MOptionalMonad">
            <summary>Mole type of <see cref="T:FP.Linq.OptionalMonad"/>
            .</summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.SelectManyOptionalOfT1FuncOfT1OptionalOfT2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0},System.Func{``0,FP.Core.Optional{``1}},FP.Core.Optional{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.OptionalMonad.SelectMany``2(FP.Core.Optional`1{``0},System.Func`2{``0,FP.Core.Optional`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.SelectManyOptionalOfT1FuncOfT1OptionalOfT2FuncOfT1T2T3``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0},System.Func{``0,FP.Core.Optional{``1}},System.Func{``0,``1,``2},FP.Core.Optional{``2}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.OptionalMonad.SelectMany``3(FP.Core.Optional`1{``0},System.Func`2{``0,FP.Core.Optional`1{``1}},System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.SelectOptionalOfT1FuncOfT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0},System.Func{``0,``1},FP.Core.Optional{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.OptionalMonad.Select``2(FP.Core.Optional`1{``0},System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.WhereOptionalOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Optional{``0},System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.OptionalMonad.Where``1(FP.Core.Optional`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MOptionalMonad.WhereTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Func{``0,System.Boolean},FP.Core.Optional{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.OptionalMonad.Where``1(``0,System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Linq.Moles.MOptionalMonad.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MOptionalNotNull`1">
            <summary>Mole type of <see cref="T:FP.Core.OptionalNotNull`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.BitwiseOrOpOptionalNotNullOfTOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_BitwiseOr(FP.Core.OptionalNotNull`1{`1},FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.BitwiseOrOpOptionalNotNullOfTT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_BitwiseOr(FP.Core.OptionalNotNull`1{`1},`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.EqualityOpOptionalNotNullOfTOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Equality(FP.Core.OptionalNotNull`1{`1},FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.ExplicitOpOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Explicit(FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.ExplicitOpOptionalOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Explicit(FP.Core.Optional`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.ExplicitOpT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Explicit(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.FalseOpOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_False(FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.ImplicitOpOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Implicit(FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.InequalityOpOptionalNotNullOfTOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_Inequality(FP.Core.OptionalNotNull`1{`1},FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1.TrueOpOptionalNotNullOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.op_True(FP.Core.OptionalNotNull`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1._GetHashCodeb__6T">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.&lt;GetHashCode&gt;b__6(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1._op_Explicitb__2T">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.&lt;op_Explicit&gt;b__2(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull`1._op_Implicitb__4T">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull`1.&lt;op_Implicit&gt;b__4(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MOptionalNotNull`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MOptionalNotNull01">
            <summary>Mole type of <see cref="T:FP.Core.OptionalNotNull"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.FlattenOptionalNotNullOfOptionalNotNullOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.OptionalNotNull{FP.Core.OptionalNotNull{``0}},FP.Core.OptionalNotNull{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Flatten``1(FP.Core.OptionalNotNull`1{FP.Core.OptionalNotNull`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.MapSomeIEnumerableOfTFuncOfTOptionalNotNullOfR``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,FP.Core.OptionalNotNull{``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.MapSome``2(System.Collections.Generic.IEnumerable`1{``0},System.Func`2{``0,FP.Core.OptionalNotNull`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.None``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.OptionalNotNull{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.None``1"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.SelectValuesIEnumerableOfOptionalNotNullOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Core.OptionalNotNull{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.SelectValues``1(System.Collections.Generic.IEnumerable`1{FP.Core.OptionalNotNull`1{``0}})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.SomeT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.OptionalNotNull{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Some``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.WrapT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.OptionalNotNull{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Wrap``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01._Flattenb__0OptionalNotNullOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.OptionalNotNull{``0},FP.Core.OptionalNotNull{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.&lt;Flatten&gt;b__0``1(FP.Core.OptionalNotNull`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.CreateUriStringUriKind">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.CreateUri(T:System.String,T:System.UriKind)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.CreateUriUriString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.CreateUri(T:System.Uri,T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.CreateUriUriUri">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.CreateUri(T:System.Uri,T:System.Uri)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.GetValueDbConnectionStringBuilderString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.GetValue(T:System.Data.Common.DbConnectionStringBuilder,T:System.String)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MOptionalNotNull01.MParse">
            <summary>Mole type of <see cref="T:FP.Core.OptionalNotNull.Parse"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.MParse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.MParse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MOptionalNotNull01.MParse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.BoolString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Bool(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ByteString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Byte(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ByteStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Byte(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.CharString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Char(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DateTimeOffsetString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.DateTimeOffset(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DateTimeOffsetStringIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.DateTimeOffset(T:System.String,T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DateTimeString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.DateTime(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DateTimeStringIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.DateTime(T:System.String,T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DecimalString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Decimal(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DecimalStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Decimal(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DoubleString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Double(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.DoubleStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Double(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ExactDateTimeOffsetStringStringArrayIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ExactDateTimeOffset(T:System.String,T:System.String[],T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ExactDateTimeOffsetStringStringIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ExactDateTimeOffset(T:System.String,T:System.String,T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ExactDateTimeStringStringArrayIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ExactDateTime(T:System.String,T:System.String[],T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ExactDateTimeStringStringIFormatProviderDateTimeStyles">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ExactDateTime(T:System.String,T:System.String,T:System.IFormatProvider,T:System.Globalization.DateTimeStyles)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.FloatString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Float(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.FloatStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Float(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.IPAddressString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.IPAddress(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.IntString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Int(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.IntStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Int(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.LongString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Long(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.LongStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Long(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.SByteString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.SByte(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.SByteStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.SByte(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ShortString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Short(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ShortStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.Short(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.TimeSpanString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.TimeSpan(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.UIntString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.UInt(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.UIntStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.UInt(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ULongString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ULong(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.ULongStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.ULong(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.UShortString">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.UShort(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MOptionalNotNull01.MParse.UShortStringNumberStylesIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.OptionalNotNull.Parse.UShort(T:System.String,T:System.Globalization.NumberStyles,T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MOrderedSequence`1">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.OrderedSequence`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.AdditionOpOrderedSequenceOfTOrderedSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence`1.op_Addition(FP.Collections.Persistent.OrderedSequence`1{`1},FP.Collections.Persistent.OrderedSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.BitwiseOrOpOrderedSequenceOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence`1.op_BitwiseOr(FP.Collections.Persistent.OrderedSequence`1{`1},`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.EmptyInstanceGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.OrderedSequence`1.EmptyInstance"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.EqualityOpOrderedSequenceOfTOrderedSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence`1.op_Equality(FP.Collections.Persistent.OrderedSequence`1{`1},FP.Collections.Persistent.OrderedSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.InequalityOpOrderedSequenceOfTOrderedSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence`1.op_Inequality(FP.Collections.Persistent.OrderedSequence`1{`1},FP.Collections.Persistent.OrderedSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence`1.SingleT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence`1.Single(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MOrderedSequence`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MOrderedSequence01">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.OrderedSequence"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.Empty``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.OrderedSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence.Empty``1"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.FromEnumerableIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Collections.Persistent.OrderedSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence.FromEnumerable``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MOrderedSequence01.SingleT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Collections.Persistent.OrderedSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.OrderedSequence.Single``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MOrderedSequence01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MPair">
            <summary>Mole type of <see cref="T:FP.Core.Pair"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MPair.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MPair.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MPair.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MPair.NewT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,FP.Core.Tuple{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Pair.New``2(``0,``1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MPair.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MPriorityQueue`2">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.PriorityQueue`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.AdditionOpPriorityQueueOfTTPriorityPriorityQueueOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.op_Addition(FP.Collections.Persistent.PriorityQueue`2{`1,`2},FP.Collections.Persistent.PriorityQueue`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.BitwiseOrOpPriorityQueueOfTTPriorityPriorityValuePairOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.op_BitwiseOr(FP.Collections.Persistent.PriorityQueue`2{`1,`2},FP.Collections.Persistent.PriorityValuePair`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.EmptyInstanceGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.PriorityQueue`2.EmptyInstance"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.EqualityOpPriorityQueueOfTTPriorityPriorityQueueOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.op_Equality(FP.Collections.Persistent.PriorityQueue`2{`1,`2},FP.Collections.Persistent.PriorityQueue`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.InequalityOpPriorityQueueOfTTPriorityPriorityQueueOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.op_Inequality(FP.Collections.Persistent.PriorityQueue`2{`1,`2},FP.Collections.Persistent.PriorityQueue`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2.SinglePriorityValuePairOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.Single(FP.Collections.Persistent.PriorityValuePair`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue`2._get_Itemb__5PriorityValuePairOfTTPriority">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue`2.&lt;get_Item&gt;b__5(FP.Collections.Persistent.PriorityValuePair`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MPriorityQueue`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MPriorityQueue01">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.PriorityQueue"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.Empty``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.PriorityQueue{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue.Empty``2"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.FromEnumerableIEnumerableOfPriorityValuePairOfTTPriority``2(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{FP.Collections.Persistent.PriorityValuePair{``0,``1}},FP.Collections.Persistent.PriorityQueue{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue.FromEnumerable``2(System.Collections.Generic.IEnumerable`1{FP.Collections.Persistent.PriorityValuePair`2{``0,``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.SinglePriorityValuePairOfTTPriority``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.PriorityValuePair{``0,``1},FP.Collections.Persistent.PriorityQueue{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue.Single``2(FP.Collections.Persistent.PriorityValuePair`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityQueue01.SingleTTPriority``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,FP.Collections.Persistent.PriorityQueue{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.PriorityQueue.Single``2(``0,``1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityQueue01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MPriorityValuePair`2">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.PriorityValuePair`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityValuePair`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityValuePair`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MPriorityValuePair`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MPriorityValuePair`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MPriorityValuePair`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MRandomAccessSequence`1">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.RandomAccessSequence`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.AdditionOpRandomAccessSequenceOfTRandomAccessSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.op_Addition(FP.Collections.Persistent.RandomAccessSequence`1{`1},FP.Collections.Persistent.RandomAccessSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.BitwiseOrOpRandomAccessSequenceOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.op_BitwiseOr(FP.Collections.Persistent.RandomAccessSequence`1{`1},`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.BitwiseOrOpTRandomAccessSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.op_BitwiseOr(`1,FP.Collections.Persistent.RandomAccessSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.EmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.RandomAccessSequence`1.Empty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.EqualityOpRandomAccessSequenceOfTRandomAccessSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.op_Equality(FP.Collections.Persistent.RandomAccessSequence`1{`1},FP.Collections.Persistent.RandomAccessSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.InequalityOpRandomAccessSequenceOfTRandomAccessSequenceOfT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.op_Inequality(FP.Collections.Persistent.RandomAccessSequence`1{`1},FP.Collections.Persistent.RandomAccessSequence`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.SingleT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence`1.Single(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MRandomAccessSequence`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MRandomAccessSequence01">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.RandomAccessSequence"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.Empty``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.RandomAccessSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence.Empty``1"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.FromEnumerableIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Collections.Persistent.RandomAccessSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence.FromEnumerable``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MRandomAccessSequence01.SingleT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Collections.Persistent.RandomAccessSequence{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.RandomAccessSequence.Single``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MRandomAccessSequence01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MRef">
            <summary>Mole type of <see cref="T:FP.Core.Ref"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.NewRefTActionOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},FP.Core.IRef{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewRef``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.NewT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.IRef{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.New``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.NewTActionOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},FP.Core.IRef{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.New``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MRef.NewValTActionOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},FP.Core.IRef{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewVal``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.DecrementIRefOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.Decrement(FP.Core.IRef`1{T:System.Int32})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.IncrementIRefOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.Increment(FP.Core.IRef`1{T:System.Int32})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewBoolBooleanActionOfBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewBool(T:System.Boolean,System.Action`1{T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewDoubleDoubleActionOfDouble">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewDouble(T:System.Double,System.Action`1{T:System.Double})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewFloatSingleActionOfSingle">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewFloat(T:System.Single,System.Action`1{T:System.Single})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewIntInt32ActionOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewInt(T:System.Int32,System.Action`1{T:System.Int32})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewIntPtrIntPtrActionOfIntPtr">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewIntPtr(T:System.IntPtr,System.Action`1{T:System.IntPtr})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef.NewLongInt64ActionOfInt64">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.NewLong(T:System.Int64,System.Action`1{T:System.Int64})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef._Decrementb__2Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.&lt;Decrement&gt;b__2(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRef._Incrementb__0Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Ref.&lt;Increment&gt;b__0(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBase`1">
            <summary>Mole type of <see cref="T:FP.Core.RefBase`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBase`1.#ctor(FP.Core.RefBase{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBase`1.Bind(FP.Core.IRef{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.AdjustFuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBase`1.Adjust(System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.ConstructorTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBase`1.#ctor(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.ValidateT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBase`1.Validate(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.ValidatorGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBase`1.Validator"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.ValidatorSetActionOfT">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBase`1.Validator"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBase`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.AllInstances.AdjustFuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBase`1.Adjust(System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.AllInstances.ValidateT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBase`1.Validate(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.AllInstances.ValidatorGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBase`1.Validator"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBase`1.AllInstances.ValidatorSetActionOfT">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBase`1.Validator"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBaseEx`1">
            <summary>Mole type of <see cref="T:FP.Core.RefBaseEx`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBaseEx`1.#ctor(FP.Core.RefBaseEx{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBaseEx`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBaseEx`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBaseEx`1.Bind(FP.Core.IRef{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBaseEx`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBaseEx`1.ConstructorT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBaseEx`1.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBaseEx`1.ConstructorTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBaseEx`1.#ctor(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBaseEx`1.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBaseEx`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBaseEx`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBaseEx`1.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBaseEx`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBool">
            <summary>Mole type of <see cref="T:FP.Core.RefBool"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBool.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBool.#ctor(FP.Core.RefBool)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBool.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBool.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefBool.Bind(FP.Core.IRef{System.Boolean})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.CompareAndSetBooleanBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.CompareAndSet(T:System.Boolean,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.ConstructorBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.#ctor(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.ConstructorBooleanActionOfBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.#ctor(T:System.Boolean,System.Action`1{T:System.Boolean})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.StoreBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.Store(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBool.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefBool.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.AllInstances.CompareAndSetBooleanBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.CompareAndSet(T:System.Boolean,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.AllInstances.StoreBoolean">
            <summary>Sets the mole of <see cref="M:FP.Core.RefBool.Store(T:System.Boolean)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefBool.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.RefBool.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefValidationException">
            <summary>Mole type of <see cref="T:FP.Core.RefValidationException"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefValidationException.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefValidationException.#ctor(FP.Core.RefValidationException)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefValidationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefValidationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MRefValidationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefValidationException.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MRefValidationException.Constructor">
            <summary>Sets the mole of <see cref="M:FP.Core.RefValidationException.#ctor"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefValidationException.ConstructorException">
            <summary>Sets the mole of <see cref="M:FP.Core.RefValidationException.#ctor(T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefValidationException.ConstructorString">
            <summary>Sets the mole of <see cref="M:FP.Core.RefValidationException.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MRefValidationException.ConstructorStringException">
            <summary>Sets the mole of <see cref="M:FP.Core.RefValidationException.#ctor(T:System.String,T:System.Exception)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MRefValidationException.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MResult">
            <summary>Mole type of <see cref="T:FP.Core.Result"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.FailureException``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Exception,FP.Core.Result{``0}.Failure})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result.Failure``1(T:System.Exception)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.FailureString``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.String,FP.Core.Result{``0}.Failure})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result.Failure``1(T:System.String)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.SuccessT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Result{``0}.Success})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result.Success``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MResult.TryFuncOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0},FP.Core.Result{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result.Try``1(System.Func`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1">
            <summary>Mole type of <see cref="T:FP.Core.Result`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.#ctor(FP.Core.Result{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.Constructor">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.#ctor"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.ExplicitOpResultOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.op_Explicit(FP.Core.Result`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.FalseOpResultOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.op_False(FP.Core.Result`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.TrueOpResultOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.op_True(FP.Core.Result`1{`1})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1.MFailure">
            <summary>Mole type of <see cref="T:FP.Core.Result`1.Failure"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.#ctor(FP.Core.Result{`0}.Failure)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.MatchFuncOfTRFuncOfExceptionR``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0},System.Func{System.Exception,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.Match``1(System.Func`2{`1,``0},System.Func`2{T:System.Exception,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ConstructorException">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.#ctor(T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ConstructorString">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.#ctor(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ExceptionGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Exception"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ExceptionSetException">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Exception"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ImplicitOpResultFailureOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.op_Implicit(FP.Core.Result`1.Failure{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.MatchActionOfTActionOfException">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.Match(System.Action`1{`1},System.Action`1{T:System.Exception})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ReasonGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Reason"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ToOptional">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.ToOptional"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ToString">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1.MFailure.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MFailure.AllInstances.MatchFuncOfTRFuncOfExceptionR``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{`0}.Failure,System.Func{`0,``0},System.Func{System.Exception,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.Match``1(System.Func`2{`1,``0},System.Func`2{T:System.Exception,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ExceptionGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Exception"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ExceptionSetException">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Exception"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.MatchActionOfTActionOfException">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.Match(System.Action`1{`1},System.Action`1{T:System.Exception})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ReasonGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Reason"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ToOptional">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.ToOptional"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Failure.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MFailure.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Failure.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1.MSuccess">
            <summary>Mole type of <see cref="T:FP.Core.Result`1.Success"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.#ctor(FP.Core.Result{`0}.Success)">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.MatchFuncOfTRFuncOfExceptionR``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0},System.Func{System.Exception,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.Match``1(System.Func`2{`1,``0},System.Func`2{T:System.Exception,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.ConstructorT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.#ctor(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.ImplicitOpResultSuccessOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.op_Implicit(FP.Core.Result`1.Success{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.ImplicitOpT">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.op_Implicit(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.MatchActionOfTActionOfException">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.Match(System.Action`1{`1},System.Action`1{T:System.Exception})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.ToOptional">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.ToOptional"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Success.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MResult01`1.MSuccess.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MResult01`1.MSuccess.AllInstances.MatchFuncOfTRFuncOfExceptionR``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{`0}.Success,System.Func{`0,``0},System.Func{System.Exception,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.Match``1(System.Func`2{`1,``0},System.Func`2{T:System.Exception,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.AllInstances.MatchActionOfTActionOfException">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.Match(System.Action`1{`1},System.Action`1{T:System.Exception})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.AllInstances.ToOptional">
            <summary>Sets the mole of <see cref="M:FP.Core.Result`1.Success.ToOptional"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MResult01`1.MSuccess.AllInstances.ValueGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Result`1.Success.Value"/>
            </summary>
        </member>
        <member name="T:FP.Linq.Moles.MResultMonad">
            <summary>Mole type of <see cref="T:FP.Linq.ResultMonad"/>
            .</summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.SelectManyResultOfT1FuncOfT1ResultOfT2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{``0},System.Func{``0,FP.Core.Result{``1}},FP.Core.Result{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ResultMonad.SelectMany``2(FP.Core.Result`1{``0},System.Func`2{``0,FP.Core.Result`1{``1}})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.SelectManyResultOfT1FuncOfT1ResultOfT2FuncOfT1T2T3``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{``0},System.Func{``0,FP.Core.Result{``1}},System.Func{``0,``1,``2},FP.Core.Result{``2}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ResultMonad.SelectMany``3(FP.Core.Result`1{``0},System.Func`2{``0,FP.Core.Result`1{``1}},System.Func`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.SelectResultOfT1FuncOfT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{``0},System.Func{``0,``1},FP.Core.Result{``1}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ResultMonad.Select``2(FP.Core.Result`1{``0},System.Func`2{``0,``1})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad.WhereResultOfTFuncOfTBoolean``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Result{``0},System.Func{``0,System.Boolean},FP.Core.Result{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ResultMonad.Where``1(FP.Core.Result`1{``0},System.Func`2{``0,T:System.Boolean})"/>
            </summary>
        </member>
        <member name="M:FP.Linq.Moles.MResultMonad._Whereb__0Exception``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Exception,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Linq.ResultMonad.&lt;Where&gt;b__0``1(T:System.Exception)"/>
            </summary>
        </member>
        <member name="P:FP.Linq.Moles.MResultMonad.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MReverseComparer`1">
            <summary>Mole type of <see cref="T:FP.Core.ReverseComparer`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MReverseComparer`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MReverseComparer`1.#ctor(FP.Core.ReverseComparer{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MReverseComparer`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MReverseComparer`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MReverseComparer`1.Bind(System.Collections.Generic.IComparer{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Core.Moles.MReverseComparer`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MReverseComparer`1.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.ReverseComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MReverseComparer`1.ConstructorIComparerOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.ReverseComparer`1.#ctor(System.Collections.Generic.IComparer`1{`1})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MReverseComparer`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Core.Moles.MReverseComparer`1.AllInstances.CompareTT">
            <summary>Sets the mole of <see cref="M:FP.Core.ReverseComparer`1.Compare(`1,`1)"/>
            </summary>
        </member>
        <member name="T:FP.Text.Moles.MStrings">
            <summary>Mole type of <see cref="T:FP.Text.Strings"/>
            .</summary>
        </member>
        <member name="M:FP.Text.Moles.MStrings.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Text.Moles.MStrings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Text.Moles.MStrings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.AsStringIEnumerableOfChar">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.AsString(System.Collections.Generic.IEnumerable`1{T:System.Char})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.ClearStringBuilder">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.Clear(T:System.Text.StringBuilder)"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.IsNullOrEmptyString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.IsNullOrEmpty(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.LinesIEnumerableOfChar">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.Lines(System.Collections.Generic.IEnumerable`1{T:System.Char})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.ReverseIteratorString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.ReverseIterator(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnLinesAsStringIEnumerableOfString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnLinesAsString(System.Collections.Generic.IEnumerable`1{T:System.String})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnLinesCSIEnumerableOfIEnumerableOfChar">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnLinesCS(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{T:System.Char}})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnLinesIEnumerableOfString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnLines(System.Collections.Generic.IEnumerable`1{T:System.String})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnWordsAsStringIEnumerableOfString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnWordsAsString(System.Collections.Generic.IEnumerable`1{T:System.String})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnWordsCSIEnumerableOfIEnumerableOfChar">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnWordsCS(System.Collections.Generic.IEnumerable`1{System.Collections.Generic.IEnumerable`1{T:System.Char}})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.UnWordsIEnumerableOfString">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.UnWords(System.Collections.Generic.IEnumerable`1{T:System.String})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.WhitespaceCharsGet">
            <summary>Sets the mole of <see cref="P:FP.Text.Strings.WhitespaceChars"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings.WordsIEnumerableOfChar">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.Words(System.Collections.Generic.IEnumerable`1{T:System.Char})"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings._AsStringb__1String">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.&lt;AsString&gt;b__1(T:System.String)"/>
            </summary>
        </member>
        <member name="P:FP.Text.Moles.MStrings._UnWordsb__15String">
            <summary>Sets the mole of <see cref="M:FP.Text.Strings.&lt;UnWords&gt;b__15(T:System.String)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MSwitch">
            <summary>Mole type of <see cref="T:FP.Core.Switch"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch.ExprOnT``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Switch{``0,``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch.ExprOn``2(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch.OnT``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,FP.Core.Switch{``0,``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch.On``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MSwitch01`2">
            <summary>Mole type of <see cref="T:FP.Core.Switch`2"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.#ctor(FP.Core.Switch{`0,`1})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.Break``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Break``1"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseFuncOfTNewBooleanActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,System.Boolean},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(System.Func`2{``0,T:System.Boolean},System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseTNewActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughFuncOfTNewBooleanActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,System.Boolean},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(System.Func`2{``0,T:System.Boolean},System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughTNewActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.DefaultActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Action{System.Action{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Default``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2._CaseWithFallThroughb__cTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;CaseWithFallThrough&gt;b__c``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2._CaseWithFallThroughb__eTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;CaseWithFallThrough&gt;b__e``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2._Caseb__bTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;Case&gt;b__b``1(``0)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2._Caseb__dTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;Case&gt;b__d``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseFuncOfTBooleanActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(System.Func`2{`1,T:System.Boolean},System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughFuncOfTBooleanActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(System.Func`2{`1,T:System.Boolean},System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.CaseWithFallThroughTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.ConstructorTS">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.#ctor(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.DefaultActionOfS">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Default(System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2._CaseWithFallThroughb__9T">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;CaseWithFallThrough&gt;b__9(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2._Caseb__7T">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.&lt;Case&gt;b__7(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MSwitch01`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseFuncOfTNewBooleanActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},System.Func{``0,System.Boolean},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(System.Func`2{``0,T:System.Boolean},System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseTNewActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},``0,System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughFuncOfTNewBooleanActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},System.Func{``0,System.Boolean},System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(System.Func`2{``0,T:System.Boolean},System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughTNewActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1},``0,System.Action{``0},FP.Core.Switch{``0,`1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough``1(``0,System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch01`2.AllInstances.DefaultActionOfTNew``1(Microsoft.Moles.Framework.MolesDelegates.Action{FP.Core.Switch{`0,`1},System.Action{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Default``1(System.Action`1{``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseFuncOfTBooleanActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(System.Func`2{`1,T:System.Boolean},System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Case(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughFuncOfTBooleanActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(System.Func`2{`1,T:System.Boolean},System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.CaseWithFallThroughTActionOfT">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.CaseWithFallThrough(`1,System.Action`1{`1})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch01`2.AllInstances.DefaultActionOfS">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`2.Default(System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MSwitch02`3">
            <summary>Mole type of <see cref="T:FP.Core.Switch`3"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.#ctor(FP.Core.Switch{`0,`1,`2})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.CaseFuncOfTNewBooleanFuncOfTNewR``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,System.Boolean},System.Func{``0,`2},FP.Core.Switch{``0,`1,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case``1(System.Func`2{``0,T:System.Boolean},System.Func`2{``0,`3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.CaseFuncOfTNewR``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,`2},FP.Core.Switch{``0,`1,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case``1(System.Func`2{``0,`3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3._Caseb__3TNew``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.&lt;Case&gt;b__3``1(``0)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.CaseFuncOfTBooleanFuncOfTR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case(System.Func`2{`1,T:System.Boolean},System.Func`2{`1,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.CaseTFuncOfTR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case(`1,System.Func`2{`1,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.ConstructorTS">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.#ctor(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.DefaultFuncOfSR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Default(System.Func`2{`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.HasResultGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.HasResult"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.ResultGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.Result"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.ResultSetR">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.Result"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MSwitch02`3.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.AllInstances.CaseFuncOfTNewBooleanFuncOfTNewR``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1,`2},System.Func{``0,System.Boolean},System.Func{``0,`2},FP.Core.Switch{``0,`1,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case``1(System.Func`2{``0,T:System.Boolean},System.Func`2{``0,`3})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MSwitch02`3.AllInstances.CaseFuncOfTNewR``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Switch{`0,`1,`2},System.Func{``0,`2},FP.Core.Switch{``0,`1,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case``1(System.Func`2{``0,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.CaseFuncOfTBooleanFuncOfTR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case(System.Func`2{`1,T:System.Boolean},System.Func`2{`1,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.CaseTFuncOfTR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Case(`1,System.Func`2{`1,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.DefaultFuncOfSR">
            <summary>Sets the mole of <see cref="M:FP.Core.Switch`3.Default(System.Func`2{`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.HasResultGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.HasResult"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.ResultGet">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.Result"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MSwitch02`3.AllInstances.ResultSetR">
            <summary>Sets the mole of <see cref="P:FP.Core.Switch`3.Result"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MTreeDictionary`3">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.TreeDictionary`3"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.#ctor(FP.Collections.Persistent.TreeDictionary{`0,`1,`2})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(FP.Collections.Persistent.ICollection{FP.Core.Tuple{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(FP.Collections.Persistent.ICombinableDictionary{`0,`1,FP.Collections.Persistent.TreeDictionary{`0,`1,`2}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(FP.Collections.Persistent.IDictionary{`0,`1,FP.Collections.Persistent.TreeDictionary{`0,`1,`2}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(FP.Collections.Persistent.IReversibleEnumerable{FP.Core.Tuple{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(FP.Collections.Persistent.ISortedDictionary{`0,`1,`2,FP.Collections.Persistent.TreeDictionary{`0,`1,`2}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(System.IEquatable{FP.Collections.Persistent.TreeDictionary{`0,`1,`2}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.Bind(System.Collections.Generic.IEnumerable{FP.Core.Tuple{`0,`1}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.MapFuncOfTKeyTValueTValue1``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,`1,``0},FP.Collections.Persistent.TreeDictionary{`0,``0,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Map``1(System.Func`3{`1,`2,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.MapPartialFuncOfTKeyTValueOptionalOfTValue1``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,`1,FP.Core.Optional{``0}},FP.Collections.Persistent.TreeDictionary{`0,``0,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MapPartial``1(System.Func`3{`1,`2,FP.Core.Optional`1{``0}})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AddRecursiveTKeyTValueBooleanRef">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AddRecursive(`1,`2,T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AddRecursiveTKeyTValueFuncOfTValueTValueBooleanRef">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AddRecursive(`1,`2,System.Func`2{`2,`2},T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AddTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AddTKeyTValueFuncOfTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AssertInvariant">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AssertInvariant"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.BalancedTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Balanced(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.BalancedTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Balanced(`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.BalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Balanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ConstructorInt32TKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.#ctor(T:System.Int32,`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ConstructorTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.#ctor(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.CountGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.DifferenceTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Difference(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.EqualityOpTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.op_Equality(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.EqualsTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Equals(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FilterGreaterTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FilterGreater(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FilterLessTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FilterLess(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FindAndRemoveMaxKeyFromNonEmptyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMaxKeyFromNonEmpty(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FindAndRemoveMaxKeyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMaxKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FindAndRemoveMinKeyFromNonEmptyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMinKeyFromNonEmpty(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.FindAndRemoveMinKeyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMinKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.GlueBalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GlueBalanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.GlueUnbalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GlueUnbalanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.InequalityOpTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.op_Inequality(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.InsertMaxTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.InsertMax(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.InsertMinTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.InsertMin(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.IntersectionLeftBiasedTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.IntersectionLeftBiased(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.IntersectionTreeDictionaryOfTKeyTValueTComparerFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Intersection(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.KeysGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.MapFuncOfTKeyTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.MapPartialFuncOfTKeyTValueOptionalOfTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.MaxKeyAndValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MaxKeyAndValue"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.MinKeyAndValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MinKeyAndValue"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.NearlyBalancedTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.NearlyBalanced(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.NearlyBalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.NearlyBalanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RemoveTKeyOptionalOfTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ReplaceValueDontCheckEqualityTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReplaceValueDontCheckEquality(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ReplaceValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReplaceValue(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ReverseIterator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReverseIterator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateDoubleLeftTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateDoubleLeft(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateDoubleRightTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateDoubleRight(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateLeftTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateLeft(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateRightTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateRight(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateSingleLeftTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateSingleLeft(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.RotateSingleRightTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.RotateSingleRight(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.SplitTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Split(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.TrimHighTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.TrimHigh(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.TrimLowTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.TrimLow(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.TrimTKeyTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Trim(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UnbalancedTKeyTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Unbalanced(`1,`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UnbalancedTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Unbalanced(`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UnionLeftBiasedTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UnionLeftBiased(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UnionTreeDictionaryOfTKeyTValueTComparerFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Union(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UnionTrimTreeDictionaryOfTKeyTValueTComparerTKeyTKeyFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UnionTrim(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},`1,`1,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UpdateHelperTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOutBooleanOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UpdateHelper(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@,T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.UpdateTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.ValuesGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Values"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MapFuncOfTKeyTValueTValue1``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.TreeDictionary{`0,`1,`2},System.Func{`0,`1,``0},FP.Collections.Persistent.TreeDictionary{`0,``0,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Map``1(System.Func`3{`1,`2,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MapPartialFuncOfTKeyTValueOptionalOfTValue1``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.TreeDictionary{`0,`1,`2},System.Func{`0,`1,FP.Core.Optional{``0}},FP.Collections.Persistent.TreeDictionary{`0,``0,`2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MapPartial``1(System.Func`3{`1,`2,FP.Core.Optional`1{``0}})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.AddRecursiveTKeyTValueBooleanRef">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AddRecursive(`1,`2,T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.AddRecursiveTKeyTValueFuncOfTValueTValueBooleanRef">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AddRecursive(`1,`2,System.Func`2{`2,`2},T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.AddTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.AddTKeyTValueFuncOfTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.AssertInvariant">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.AssertInvariant"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.BalancedTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Balanced(`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.BalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Balanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.CountGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.DifferenceTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Difference(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.EqualsTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Equals(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FilterGreaterTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FilterGreater(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FilterLessTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FilterLess(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FindAndRemoveMaxKeyFromNonEmptyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMaxKeyFromNonEmpty(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FindAndRemoveMaxKeyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMaxKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FindAndRemoveMinKeyFromNonEmptyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMinKeyFromNonEmpty(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.FindAndRemoveMinKeyTKeyOutTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.FindAndRemoveMinKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.InsertMaxTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.InsertMax(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.InsertMinTKeyTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.InsertMin(`1,`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.IntersectionLeftBiasedTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.IntersectionLeftBiased(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.IntersectionTreeDictionaryOfTKeyTValueTComparerFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Intersection(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.ItemGetTKey">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.KeysGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MapFuncOfTKeyTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MapPartialFuncOfTKeyTValueOptionalOfTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MaxKeyAndValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MaxKeyAndValue"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.MinKeyAndValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.MinKeyAndValue"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.NearlyBalancedTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.NearlyBalanced(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.RemoveTKeyOptionalOfTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.ReplaceValueDontCheckEqualityTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReplaceValueDontCheckEquality(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.ReplaceValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReplaceValue(`2)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.ReverseIterator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.ReverseIterator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.SplitTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Split(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.TrimHighTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.TrimHigh(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.TrimLowTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.TrimLow(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.TrimTKeyTKey">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Trim(`1,`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UnbalancedTValueTreeDictionaryOfTKeyTValueTComparerTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Unbalanced(`2,FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UnionLeftBiasedTreeDictionaryOfTKeyTValueTComparer">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UnionLeftBiased(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UnionTreeDictionaryOfTKeyTValueTComparerFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Union(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UnionTrimTreeDictionaryOfTKeyTValueTComparerTKeyTKeyFuncOfTKeyTValueTValueTValue">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UnionTrim(FP.Collections.Persistent.TreeDictionary`3{`1,`2,`3},`1,`1,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UpdateHelperTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOutBooleanOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.UpdateHelper(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@,T:System.Boolean@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.UpdateTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOut">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary`3.AllInstances.ValuesGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.TreeDictionary`3.Values"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MTreeDictionary01">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.TreeDictionary"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.CountTreeDictionaryOfTKeyTValueTComparer``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.TreeDictionary{``0,``1,``2},System.Int32})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary.Count``3(FP.Collections.Persistent.TreeDictionary`3{``0,``1,``2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.Empty``3(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.TreeDictionary{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary.Empty``3"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.Empty01``2(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Collections.Persistent.TreeDictionary{``0,``1,FP.Core.DefaultComparer{``0}}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary.Empty``2"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.SingleTKeyTValue``3(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,FP.Collections.Persistent.TreeDictionary{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary.Single``3(``0,``1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MTreeDictionary01.SingleTKeyTValue01``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,FP.Collections.Persistent.TreeDictionary{``0,``1,FP.Core.DefaultComparer{``0}}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.TreeDictionary.Single``2(``0,``1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MTreeDictionary01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MTriple">
            <summary>Mole type of <see cref="T:FP.Core.Triple"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTriple.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTriple.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTriple.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTriple.NewT1T2T3``3(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,``2,FP.Core.Tuple{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Triple.New``3(``0,``1,``2)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTriple.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple`2">
            <summary>Mole type of <see cref="T:FP.Core.Tuple`2"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple`2.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple`2.EqualityOpTupleOfT1T2TupleOfT1T2">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`2.op_Equality(FP.Core.Tuple`2{`1,`2},FP.Core.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple`2.InequalityOpTupleOfT1T2TupleOfT1T2">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`2.op_Inequality(FP.Core.Tuple`2{`1,`2},FP.Core.Tuple`2{`1,`2})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple`2.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple01`3">
            <summary>Mole type of <see cref="T:FP.Core.Tuple`3"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple01`3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple01`3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple01`3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple01`3.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple01`3.EqualityOpTupleOfT1T2T3TupleOfT1T2T3">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`3.op_Equality(FP.Core.Tuple`3{`1,`2,`3},FP.Core.Tuple`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple01`3.InequalityOpTupleOfT1T2T3TupleOfT1T2T3">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`3.op_Inequality(FP.Core.Tuple`3{`1,`2,`3},FP.Core.Tuple`3{`1,`2,`3})"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple01`3.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple02`4">
            <summary>Mole type of <see cref="T:FP.Core.Tuple`4"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.#ctor(FP.Core.Tuple{`0,`1,`2,`3})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.Bind(System.IEquatable{FP.Core.Tuple{`0,`1,`2,`3}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.MatchFuncOfT1T2T3T4R``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,`1,`2,`3,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Match``1(System.Func`5{`1,`2,`3,`4,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.ConstructorT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.#ctor(`1,`2,`3,`4)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.EqualityOpTupleOfT1T2T3T4TupleOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.op_Equality(FP.Core.Tuple`4{`1,`2,`3,`4},FP.Core.Tuple`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.EqualsTupleOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Equals(FP.Core.Tuple`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.InequalityOpTupleOfT1T2T3T4TupleOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.op_Inequality(FP.Core.Tuple`4{`1,`2,`3,`4},FP.Core.Tuple`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.Item1Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item1"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.Item2Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item2"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.Item3Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item3"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.Item4Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item4"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.MatchActionOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Match(System.Action`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.ToString">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.ToStringIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple02`4.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple02`4.AllInstances.MatchFuncOfT1T2T3T4R``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Tuple{`0,`1,`2,`3},System.Func{`0,`1,`2,`3,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Match``1(System.Func`5{`1,`2,`3,`4,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.EqualsTupleOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Equals(FP.Core.Tuple`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.Item1Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item1"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.Item2Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item2"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.Item3Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item3"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.Item4Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`4.Item4"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.MatchActionOfT1T2T3T4">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.Match(System.Action`4{`1,`2,`3,`4})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple02`4.AllInstances.ToStringIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`4.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple03`5">
            <summary>Mole type of <see cref="T:FP.Core.Tuple`5"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.#ctor(FP.Core.Tuple{`0,`1,`2,`3,`4})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.Bind(System.IEquatable{FP.Core.Tuple{`0,`1,`2,`3,`4}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.MatchFuncOfT1T2T3T4T5R``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Func{`0,`1,`2,`3,`4,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Match``1(FP.Core.Func`6{`1,`2,`3,`4,`5,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.ConstructorT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.#ctor(`1,`2,`3,`4,`5)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.EqualityOpTupleOfT1T2T3T4T5TupleOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.op_Equality(FP.Core.Tuple`5{`1,`2,`3,`4,`5},FP.Core.Tuple`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.EqualsTupleOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Equals(FP.Core.Tuple`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.GetHashCode">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.InequalityOpTupleOfT1T2T3T4T5TupleOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.op_Inequality(FP.Core.Tuple`5{`1,`2,`3,`4,`5},FP.Core.Tuple`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Item1Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item1"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Item2Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item2"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Item3Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item3"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Item4Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item4"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.Item5Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item5"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.MatchActionOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Match(FP.Core.Action`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.ToString">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.ToStringIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple03`5.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple03`5.AllInstances.MatchFuncOfT1T2T3T4T5R``1(Microsoft.Moles.Framework.MolesDelegates.Func{FP.Core.Tuple{`0,`1,`2,`3,`4},FP.Core.Func{`0,`1,`2,`3,`4,``0},``0})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Match``1(FP.Core.Func`6{`1,`2,`3,`4,`5,``0})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.EqualsObject">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.EqualsTupleOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Equals(FP.Core.Tuple`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.GetHashCode01">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.GetHashCode"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.Item1Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item1"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.Item2Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item2"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.Item3Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item3"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.Item4Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item4"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.Item5Get">
            <summary>Sets the mole of <see cref="P:FP.Core.Tuple`5.Item5"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.MatchActionOfT1T2T3T4T5">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.Match(FP.Core.Action`5{`1,`2,`3,`4,`5})"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.ToString01">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple03`5.AllInstances.ToStringIFormatProvider">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple`5.ToString(T:System.IFormatProvider)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.MTuple04">
            <summary>Mole type of <see cref="T:FP.Core.Tuple"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.NewT1T2``2(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,FP.Core.Tuple{``0,``1}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.New``2(``0,``1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.NewT1T2T3``3(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,``2,FP.Core.Tuple{``0,``1,``2}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.New``3(``0,``1,``2)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.NewT1T2T3T4``4(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,``2,``3,FP.Core.Tuple{``0,``1,``2,``3}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.New``4(``0,``1,``2,``3)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.MTuple04.NewT1T2T3T4T5``5(Microsoft.Moles.Framework.MolesDelegates.Func{``0,``1,``2,``3,``4,FP.Core.Tuple{``0,``1,``2,``3,``4}})">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.New``5(``0,``1,``2,``3,``4)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple04.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple04.RotateRightInt32Int32">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.RotateRight(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.MTuple04.ToStringIFormatProviderObjectArray">
            <summary>Sets the mole of <see cref="M:FP.Core.Tuple.ToString(T:System.IFormatProvider,T:System.Object[])"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MVector`1">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Vector`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.#ctor">
            <summary>Initializes a new mole</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.#ctor(FP.Collections.Persistent.Vector{`0})">
            <summary>Initializes a new mole for the given instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.Bind(FP.Collections.Persistent.IAdjustableRandomAccessSequence{`0,FP.Collections.Persistent.Vector{`0}})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.Bind(FP.Collections.Persistent.ICollection{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.Bind(FP.Collections.Persistent.IRandomAccess{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the mole.</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AdjustAtInt32FuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AppendT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Append(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.BranchesDataInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.BranchesData(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.BranchesInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Branches(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.ConstructorTInt32VectorOfTArray">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.#ctor(`1,T:System.Int32,FP.Collections.Persistent.Vector`1{`1}[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.CountGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.DigitsInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Digits(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.DigitsInt32Int32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Digits(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.NumberIEnumerableOfInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Number(System.Collections.Generic.IEnumerable`1{T:System.Int32})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.NumberIEnumerableOfInt32Int32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Number(System.Collections.Generic.IEnumerable`1{T:System.Int32},T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.UpdateAtPathIEnumerableOfInt32FuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.UpdateAtPath(System.Collections.Generic.IEnumerable`1{T:System.Int32},System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MVector`1.AllInstances">
            <summary>Define moles for all instances members</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.AdjustAtInt32FuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.AppendT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Append(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.BranchesDataInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.BranchesData(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.BranchesInt32">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.Branches(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.CountGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.GetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.IsEmptyGet">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.ItemGetInt32">
            <summary>Sets the mole of <see cref="P:FP.Collections.Persistent.Vector`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector`1.AllInstances.UpdateAtPathIEnumerableOfInt32FuncOfTT">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector`1.UpdateAtPath(System.Collections.Generic.IEnumerable`1{T:System.Int32},System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.MVector01">
            <summary>Mole type of <see cref="T:FP.Collections.Persistent.Vector"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector01.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector01.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector01.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the moled type</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector01.NewIEnumerableOfT``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Collections.Generic.IEnumerable{``0},FP.Collections.Persistent.Vector{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector.New``1(System.Collections.Generic.IEnumerable`1{``0})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.MVector01.NewTArray``1(Microsoft.Moles.Framework.MolesDelegates.Func{``0[],FP.Collections.Persistent.Vector{``0}})">
            <summary>Sets the mole of <see cref="M:FP.Collections.Persistent.Vector.New``1(``0[])"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.MVector01.Behavior">
            <summary>Assigns the behavior for all methods of the moled type</summary>
        </member>
        <member name="T:FP.Core.CPS.Moles.SCont`1">
            <summary>Stub type of <see cref="T:FP.Core.CPS.Cont`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.SCont`1.#ctor(System.Action{`0},System.Action{System.Exception})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.CPS.Moles.SCont`1.InitializeStub">
            <summary>Initializes a new instance of type SCont</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.SCont`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.CPS.Moles.SCont`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:FP.Core.Moles.SDefaultComparer`1">
            <summary>Stub type of <see cref="T:FP.Core.DefaultComparer`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SDefaultComparer`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SDefaultComparer`1.InitializeStub">
            <summary>Initializes a new instance of type SDefaultComparer</summary>
        </member>
        <member name="P:FP.Core.Moles.SDefaultComparer`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SDefaultComparer`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:FP.Core.Moles.SEither`2">
            <summary>Stub type of <see cref="T:FP.Core.Either`2"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.Equals(FP.Core.Either{`0,`1})">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.Equals(System.Object)">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.EqualsEitherOfLR">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Equals(FP.Core.Either`2{`1,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.EqualsObject">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Equals(T:System.Object)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.GetHashCode">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.GetHashCode"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.GetHashCode01">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.GetHashCode"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.InitializeStub">
            <summary>Initializes a new instance of type SEither</summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.IsRightGet">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.IsRight"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.LeftValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.LeftValue"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Match``1(System.Func`2{`1,``0},System.Func`2{`2,``0})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.Match(System.Action{`0},System.Action{`1})">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.MatchActionOfLActionOfR">
            <summary>Sets the stub of <see cref="M:FP.Core.Either`2.Match(System.Action`1{`1},System.Action`1{`2})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SEither`2.MatchFuncOfLResFuncOfRRes``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0},System.Func{`1,``0},``0})">
            <summary>Sets stubs of Match(Func`2&lt;!0,!!0&gt; onLeft, Func`2&lt;!1,!!0&gt; onRight)</summary>
        </member>
        <member name="F:FP.Core.Moles.SEither`2.RightValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.RightValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SEither`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SEither`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FP.Core.Moles.SEither`2.IsRight">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.IsRight"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SEither`2.LeftValue">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.LeftValue"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SEither`2.RightValue">
            <summary>Sets the stub of <see cref="P:FP.Core.Either`2.RightValue"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IAdjustableRandomAccessSequence`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.#ctor">
            <summary>Initializes a new instance of type SIAdjustableRandomAccessSequence</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.AdjustAtInt32FuncOfTT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IAdjustableRandomAccessSequence`2.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.fp::FP#Collections#Persistent#IAdjustableRandomAccessSequence{T@TSequence}#AdjustAt(System.Int32,System.Func{`0,`0})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IAdjustableRandomAccessSequence`2.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.fp::FP#Collections#Persistent#IRandomAccess{T}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIAdjustableRandomAccessSequence`2.FP#Collections#Persistent#IRandomAccess{T}#Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SICatenable`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ICatenable`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICatenable`2.#ctor">
            <summary>Initializes a new instance of type SICatenable</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICatenable`2.ConcatTCollection">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICatenable`2.Concat(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICatenable`2.fp::FP#Collections#Persistent#ICatenable{TCollection@TResultCollection}#Concat(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICatenable`2.Concat(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SICatenable01`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ICatenable`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICatenable01`1.#ctor">
            <summary>Initializes a new instance of type SICatenable01</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICatenable01`1.ConcatTCollection">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICatenable`2.Concat(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICatenable01`1.fp::FP#Collections#Persistent#ICatenable{TCollection@TCollection}#Concat(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICatenable`2.Concat(`1)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SICollection`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ICollection`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICollection`1.#ctor">
            <summary>Initializes a new instance of type SICollection</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICollection`1.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICollection`1.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICollection`1.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICollection`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICollection`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICollection`1.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SICombinableDictionary`3">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ICombinableDictionary`3"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.#ctor">
            <summary>Initializes a new instance of type SICombinableDictionary</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.AddTKeyTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.AddTKeyTValueFuncOfTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.DifferenceTDictionary">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Difference(`3)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICombinableDictionary{TKey@TValue@TDictionary}#Difference(`2)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Difference(`3)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICombinableDictionary{TKey@TValue@TDictionary}#Intersection(`2,System.Func{`0,`1,`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Intersection(`3,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICombinableDictionary{TKey@TValue@TDictionary}#IntersectionLeftBiased(`2)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.IntersectionLeftBiased(`3)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICombinableDictionary{TKey@TValue@TDictionary}#Union(`2,System.Func{`0,`1,`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Union(`3,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICombinableDictionary{TKey@TValue@TDictionary}#UnionLeftBiased(`2)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.UnionLeftBiased(`3)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1,System.Func{`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Map(System.Func{`0,`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#MapPartial(System.Func{`0,`1,FP.Core.Optional{`1}})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Remove(`0,FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Update(`0,System.Func{`1,FP.Core.Optional{`1}},FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.IntersectionLeftBiasedTDictionary">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.IntersectionLeftBiased(`3)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.IntersectionTDictionaryFuncOfTKeyTValueTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Intersection(`3,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.ItemGetTKey">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.KeysGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.MapFuncOfTKeyTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.MapPartialFuncOfTKeyTValueOptionalOfTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.RemoveTKeyOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.global::System#Collections#Generic#IEnumerable{FP#Core#Tuple{TKey@TValue}}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SICombinableDictionary`3.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.UnionLeftBiasedTDictionary">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.UnionLeftBiased(`3)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.UnionTDictionaryFuncOfTKeyTValueTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ICombinableDictionary`3.Union(`3,System.Func`4{`1,`2,`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.UpdateTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SICombinableDictionary`3.ValuesGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#ICollection{FP#Core#Tuple{TKey@TValue}}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICombinableDictionary`3.FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Item(`0)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Keys">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SICombinableDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Values">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIDeque`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IDeque`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.#ctor">
            <summary>Initializes a new instance of type SIDeque</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.AppendT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDeque`2.Append(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IDeque{T@TDeque}#Append(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDeque`2.Append(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IList{T@TDeque}#Prepend(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IReversibleEnumerable{T}#ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.HeadGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.InitGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Init"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.LastGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Last"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.PrependT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDeque`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDeque`2.TailGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IList{T@TDeque}#Head">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IDeque{T@TDeque}#Init">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Init"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IDeque{T@TDeque}#Last">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Last"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDeque`2.fp::FP#Collections#Persistent#IList{T@TDeque}#Tail">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIDictionary`3">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IDictionary`3"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.#ctor">
            <summary>Initializes a new instance of type SIDictionary</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.AddTKeyTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.AddTKeyTValueFuncOfTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1,System.Func{`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Map(System.Func{`0,`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#MapPartial(System.Func{`0,`1,FP.Core.Optional{`1}})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Remove(`0,FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Update(`0,System.Func{`1,FP.Core.Optional{`1}},FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.ItemGetTKey">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.KeysGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.MapFuncOfTKeyTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.MapPartialFuncOfTKeyTValueOptionalOfTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.RemoveTKeyOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.global::System#Collections#Generic#IEnumerable{FP#Core#Tuple{TKey@TValue}}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIDictionary`3.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.UpdateTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIDictionary`3.ValuesGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#ICollection{FP#Core#Tuple{TKey@TValue}}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDictionary`3.FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Item(`0)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Keys">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIDictionary`3.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Values">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIEnumerableFrom`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IEnumerableFrom`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIEnumerableFrom`1.#ctor">
            <summary>Initializes a new instance of type SIEnumerableFrom</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIEnumerableFrom`1.fp::FP#Collections#Persistent#IEnumerableFrom{T}#IteratorFrom(System.Int32)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IEnumerableFrom`1.IteratorFrom(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIEnumerableFrom`1.IteratorFromInt32">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IEnumerableFrom`1.IteratorFrom(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIFoldable`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IFoldable`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIFoldable`1.#ctor">
            <summary>Initializes a new instance of type SIFoldable</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIFoldable`1.fp::FP#Collections#Persistent#IFoldable{T}#FoldLeft``1(System.Func{``0,`0,``0},``0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IFoldable`1.FoldLeft``1(System.Func`3{``0,`1,``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIFoldable`1.fp::FP#Collections#Persistent#IFoldable{T}#FoldRight``1(System.Func{`0,``0,``0},``0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IFoldable`1.FoldRight``1(System.Func`3{`1,``0,``0},``0)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIFoldable`1.FoldLeftFuncOfTAccTTAccTAcc``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{``0,`0,``0},``0,``0})">
            <summary>Sets stubs of FoldLeft(Func`3&lt;!!0,!0,!!0&gt; binOp, !!0 initial)</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIFoldable`1.FoldRightFuncOfTTAccTAccTAcc``1(Microsoft.Moles.Framework.MolesDelegates.Func{System.Func{`0,``0,``0},``0,``0})">
            <summary>Sets stubs of FoldRight(Func`3&lt;!0,!!0,!!0&gt; binOp, !!0 initial)</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IInsertableRandomAccessSequence`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.#ctor">
            <summary>Initializes a new instance of type SIInsertableRandomAccessSequence</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.AdjustAtInt32FuncOfTT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IAdjustableRandomAccessSequence`2.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.AppendT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDeque`2.Append(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IAdjustableRandomAccessSequence{T@TSequence}#AdjustAt(System.Int32,System.Func{`0,`0})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IAdjustableRandomAccessSequence`2.AdjustAt(T:System.Int32,System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IDeque{T@TSequence}#Append(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDeque`2.Append(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IInsertableRandomAccessSequence{T@TSequence}#InsertAt(System.Int32,`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.InsertAt(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IInsertableRandomAccessSequence{T@TSequence}#InsertRangeAt(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.InsertRangeAt(T:System.Int32,System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IInsertableRandomAccessSequence{T@TSequence}#RemoveAt(System.Int32)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IInsertableRandomAccessSequence{T@TSequence}#RemoveRangeAt(System.Int32,System.Int32)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.RemoveRangeAt(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IList{T@TSequence}#Prepend(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IReversibleEnumerable{T}#ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.HeadGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.InitGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Init"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.InsertAtInt32T">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.InsertAt(T:System.Int32,`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.InsertRangeAtInt32IEnumerableOfT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.InsertRangeAt(T:System.Int32,System.Collections.Generic.IEnumerable`1{`1})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.LastGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Last"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.PrependT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.RemoveAtInt32">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.RemoveAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.RemoveRangeAtInt32Int32">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IInsertableRandomAccessSequence`2.RemoveRangeAt(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.TailGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IRandomAccess{T}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IList{T@TSequence}#Head">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IDeque{T@TSequence}#Init">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Init"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.FP#Collections#Persistent#IRandomAccess{T}#Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IDeque{T@TSequence}#Last">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDeque`2.Last"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIInsertableRandomAccessSequence`2.fp::FP#Collections#Persistent#IList{T@TSequence}#Tail">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIList`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IList`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIList`2.#ctor">
            <summary>Initializes a new instance of type SIList</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIList`2.fp::FP#Collections#Persistent#IList{T@TList}#Prepend(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.HeadGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.PrependT">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IList`2.Prepend(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIList`2.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIList`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIList`2.TailGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIList`2.fp::FP#Collections#Persistent#IList{T@TList}#Head">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Head"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIList`2.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIList`2.fp::FP#Collections#Persistent#IList{T@TList}#Tail">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IList`2.Tail"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIMeasured`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IMeasured`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIMeasured`1.#ctor">
            <summary>Initializes a new instance of type SIMeasured</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIMeasured`1.MeasureGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IMeasured`1.Measure"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIMeasured`1.fp::FP#Collections#Persistent#IMeasured{V}#Measure">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IMeasured`1.Measure"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIRandomAccess`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IRandomAccess`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccess`1.#ctor">
            <summary>Initializes a new instance of type SIRandomAccess</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccess`1.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccess`1.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccess`1.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccess`1.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccess`1.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccess`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccess`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccess`1.fp::FP#Collections#Persistent#IRandomAccess{T}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccess`1.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccess`1.FP#Collections#Persistent#IRandomAccess{T}#Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IRandomAccessSequence`2"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.#ctor">
            <summary>Initializes a new instance of type SIRandomAccessSequence</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.fp::FP#Collections#Persistent#IRandomAccessSequence{T@TSequence}#SubSequence(System.Int32,System.Int32)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IRandomAccessSequence`2.SubSequence(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.ItemGetInt32">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.SubSequenceInt32Int32">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IRandomAccessSequence`2.SubSequence(T:System.Int32,T:System.Int32)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.fp::FP#Collections#Persistent#IRandomAccess{T}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.fp::FP#Collections#Persistent#ICollection{T}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SIRandomAccessSequence`2.FP#Collections#Persistent#IRandomAccess{T}#Item(System.Int32)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IRandomAccess`1.Item(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.SIRef`1">
            <summary>Stub type of <see cref="T:FP.Core.IRef`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SIRef`1.#ctor">
            <summary>Initializes a new instance of type SIRef</summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.AdjustFuncOfTT">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Adjust(System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.CompareAndSetTT">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#Adjust(System.Func{`0,`0})">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Adjust(System.Func`2{`1,`1})"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#CompareAndSet(`0,`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#Store(`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Store(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#Validate(`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Validate(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.StoreT">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Store(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.ValidateT">
            <summary>Sets the stub of <see cref="M:FP.Core.IRef`1.Validate(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.ValidatorGet">
            <summary>Sets the stub of <see cref="P:FP.Core.IRef`1.Validator"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SIRef`1.ValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.IRef`1.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#Validator">
            <summary>Sets the stub of <see cref="P:FP.Core.IRef`1.Validator"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SIRef`1.fp::FP#Core#IRef{T}#Value">
            <summary>Sets the stub of <see cref="P:FP.Core.IRef`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIReversible`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IReversible`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversible`1.#ctor">
            <summary>Initializes a new instance of type SIReversible</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversible`1.fp::FP#Collections#Persistent#IReversible{TCollection}#Reverse">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversible`1.Reverse"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIReversible`1.Reverse">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversible`1.Reverse"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.IReversibleEnumerable`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.#ctor">
            <summary>Initializes a new instance of type SIReversibleEnumerable</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.fp::FP#Collections#Persistent#IReversibleEnumerable{T}#ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.global::System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SIReversibleEnumerable`1.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SISortedDictionary`4">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ISortedDictionary`4"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.#ctor">
            <summary>Initializes a new instance of type SISortedDictionary</summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.AddTKeyTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.AddTKeyTValueFuncOfTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.CountGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Add(`0,`1,System.Func{`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Add(`1,`2,System.Func`2{`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Map(System.Func{`0,`1,`1})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#MapPartial(System.Func{`0,`1,FP.Core.Optional{`1}})">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Remove(`0,FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Update(`0,System.Func{`1,FP.Core.Optional{`1}},FP.Core.Optional{`1}@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IReversibleEnumerable{FP#Core#Tuple{TKey@TValue}}#ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ISortedDictionary{TKey@TValue@TComparer@TDictionary}#FindAndRemoveMaxKey(`0@,`1@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.FindAndRemoveMaxKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ISortedDictionary{TKey@TValue@TComparer@TDictionary}#FindAndRemoveMinKey(`0@,`1@)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.FindAndRemoveMinKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ISortedDictionary{TKey@TValue@TComparer@TDictionary}#MaxKeyAndValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.MaxKeyAndValue"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ISortedDictionary{TKey@TValue@TComparer@TDictionary}#MinKeyAndValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.MinKeyAndValue"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ISortedDictionary{TKey@TValue@TComparer@TDictionary}#Split(`0)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.Split(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.FindAndRemoveMaxKeyTKeyOutTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.FindAndRemoveMaxKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.FindAndRemoveMinKeyTKeyOutTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.FindAndRemoveMinKey(`1@,`2@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.GetEnumerator01">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.IsEmptyGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.ItemGetTKey">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.KeysGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.MapFuncOfTKeyTValueTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Map(System.Func`3{`1,`2,`2})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.MapPartialFuncOfTKeyTValueOptionalOfTValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.MapPartial(System.Func`3{`1,`2,FP.Core.Optional`1{`2}})"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.MaxKeyAndValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.MaxKeyAndValue"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.MinKeyAndValue">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.MinKeyAndValue"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.RemoveTKeyOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Remove(`1,FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.ReverseIterator">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IReversibleEnumerable`1.ReverseIterator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.SplitTKey">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISortedDictionary`4.Split(`1)"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.global::System#Collections#Generic#IEnumerable{FP#Core#Tuple{TKey@TValue}}#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator"/>
            </summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISortedDictionary`4.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of <see cref="M:System.Collections.IEnumerable.GetEnumerator"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.UpdateTKeyFuncOfTValueOptionalOfTValueOptionalOfTValueOut">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.IDictionary`3.Update(`1,System.Func`2{`2,FP.Core.Optional`1{`2}},FP.Core.Optional`1{`2}@)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISortedDictionary`4.ValuesGet">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Count">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Count"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#ICollection{FP#Core#Tuple{TKey@TValue}}#IsEmpty">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.ICollection`1.IsEmpty"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SISortedDictionary`4.FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Item(`0)">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Item(`1)"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Keys">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Keys"/>
            </summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SISortedDictionary`4.fp::FP#Collections#Persistent#IDictionary{TKey@TValue@TDictionary}#Values">
            <summary>Sets the stub of <see cref="P:FP.Collections.Persistent.IDictionary`3.Values"/>
            </summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SISplittable`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.ISplittable`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISplittable`1.#ctor">
            <summary>Initializes a new instance of type SISplittable</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SISplittable`1.fp::FP#Collections#Persistent#ISplittable{TSequence}#SplitAt(System.Int32)">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISplittable`1.SplitAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="F:FP.Collections.Persistent.Moles.SISplittable`1.SplitAtInt32">
            <summary>Sets the stub of <see cref="M:FP.Collections.Persistent.ISplittable`1.SplitAt(T:System.Int32)"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.SLazy`1">
            <summary>Stub type of <see cref="T:FP.Core.Lazy`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SLazy`1.#ctor(System.Func{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SLazy`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SLazy`1.InitializeStub">
            <summary>Initializes a new instance of type SLazy</summary>
        </member>
        <member name="M:FP.Core.Moles.SLazy`1.ToString">
            <summary>Sets the stub of <see cref="M:FP.Core.Lazy`1.ToString"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SLazy`1.ToString01">
            <summary>Sets the stub of <see cref="M:FP.Core.Lazy`1.ToString"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SLazy`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SLazy`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:FP.Collections.Persistent.Moles.SMonoid`1">
            <summary>Stub type of <see cref="T:FP.Collections.Persistent.Monoid`1"/>
            .</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SMonoid`1.#ctor(`0,System.Func{`0,`0,`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Collections.Persistent.Moles.SMonoid`1.InitializeStub">
            <summary>Initializes a new instance of type SMonoid</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SMonoid`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Collections.Persistent.Moles.SMonoid`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="T:FP.Core.Moles.SRefBase`1">
            <summary>Stub type of <see cref="T:FP.Core.RefBase`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBase`1.#ctor(`0,System.Action{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBase`1.CompareAndSet(`0,`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBase`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBase`1.CompareAndSetTT">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBase`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBase`1.InitializeStub">
            <summary>Initializes a new instance of type SRefBase</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBase`1.Store(`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBase`1.Store(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBase`1.StoreT">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBase`1.Store(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBase`1.ValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBase`1.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBase`1.Value">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBase`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.SRefBaseEx`1">
            <summary>Stub type of <see cref="T:FP.Core.RefBaseEx`1"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBaseEx`1.#ctor(`0)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBaseEx`1.#ctor(`0,System.Action{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBaseEx`1.CompareAndSet(`0,`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBaseEx`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBaseEx`1.CompareAndSetTT">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBaseEx`1.CompareAndSet(`1,`1)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBaseEx`1.InitializeStub">
            <summary>Initializes a new instance of type SRefBaseEx</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBaseEx`1.Store(`0)">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBaseEx`1.Store(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBaseEx`1.StoreT">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBaseEx`1.Store(`1)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBaseEx`1.ValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBaseEx`1.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBaseEx`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBaseEx`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBaseEx`1.Value">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBaseEx`1.Value"/>
            </summary>
        </member>
        <member name="T:FP.Core.Moles.SRefBool">
            <summary>Stub type of <see cref="T:FP.Core.RefBool"/>
            .</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBool.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBool.#ctor(System.Boolean,System.Action{System.Boolean})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBool.CompareAndSet(System.Boolean,System.Boolean)">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBool.CompareAndSet(T:System.Boolean,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBool.CompareAndSetBooleanBoolean">
            <summary>Sets the stub of <see cref="M:FP.Core.RefBool.CompareAndSet(T:System.Boolean,T:System.Boolean)"/>
            </summary>
        </member>
        <member name="M:FP.Core.Moles.SRefBool.InitializeStub">
            <summary>Initializes a new instance of type SRefBool</summary>
        </member>
        <member name="F:FP.Core.Moles.SRefBool.ValueGet">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBool.Value"/>
            </summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBool.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBool.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:FP.Core.Moles.SRefBool.Value">
            <summary>Sets the stub of <see cref="P:FP.Core.RefBool.Value"/>
            </summary>
        </member>
    </members>
</doc>
