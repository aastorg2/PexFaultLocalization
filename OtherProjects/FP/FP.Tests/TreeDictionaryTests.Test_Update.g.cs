// <copyright file="TreeDictionaryTests.Test_Update.g.cs">Copyright ©  2008</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework;
using FP.Core;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace FPTests
{
	public partial class TreeDictionaryTests
	{
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update386()
{
    int[] ints = new int[0];
    int[] ints1 = new int[0];
    this.Test_Update
        (ints, ints1, 1, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update815()
{
    int[] ints = new int[1];
    int[] ints1 = new int[1];
    this.Test_Update
        (ints, ints1, 1, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update91()
{
    int[] ints = new int[1];
    int[] ints1 = new int[1];
    this.Test_Update
        (ints, ints1, 0, 512, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update404()
{
    int[] ints = new int[1];
    int[] ints1 = new int[1];
    ints[0] = 2;
    this.Test_Update
        (ints, ints1, 1, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update266()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    int[] ints = new int[2];
    int[] ints1 = new int[2];
    ints[0] = 998;
    ints[1] = 768;
    this.Test_Update
        (ints, ints1, 998, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update60()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    int[] ints = new int[2];
    int[] ints1 = new int[2];
    ints[0] = 2;
    ints[1] = 69;
    this.Test_Update
        (ints, ints1, 69, 68, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update541()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    int[] ints = new int[2];
    int[] ints1 = new int[2];
    ints[0] = 991;
    ints[1] = 990;
    this.Test_Update
        (ints, ints1, 990, 144, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update527()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 259;
    ints[1] = 257;
    ints[2] = 256;
    this.Test_Update
        (ints, ints1, 512, 1, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update698()
{
    int[] ints = new int[4];
    int[] ints1 = new int[4];
    ints[0] = 512;
    ints[1] = 2;
    ints[2] = 66;
    ints[3] = 1;
    this.Test_Update
        (ints, ints1, 0, 1, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update361()
{
    int[] ints = new int[6];
    int[] ints1 = new int[6];
    ints[0] = -2147483590;
    ints[1] = -2147483623;
    ints[2] = -2147483592;
    ints[3] = -2147483559;
    ints[4] = -2147483589;
    ints[5] = -2147483591;
    this.Test_Update(ints, ints1, 
                     -2147221504, 13, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update378()
{
    int[] ints = new int[7];
    int[] ints1 = new int[7];
    ints[0] = -2080374270;
    ints[1] = -2147483646;
    ints[2] = -2147475453;
    ints[3] = -1073739519;
    ints[4] = -2046819823;
    ints[5] = -2076180475;
    ints[6] = -2080374272;
    this.Test_Update
        (ints, ints1, 0, 257, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update333()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = -2147482808;
    ints[1] = -2147450880;
    ints[2] = 8389513;
    this.Test_Update(ints, ints1, -2147482808, 
                                  -2147482807, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update26601()
{
    int[] ints = new int[15];
    int[] ints1 = new int[15];
    ints[0] = -2147483131;
    ints[1] = -2147483644;
    ints[2] = -2147483643;
    ints[3] = -2147483121;
    ints[4] = int.MinValue;
    ints[5] = -2147483647;
    ints[6] = -2147483123;
    ints[7] = -2147483122;
    ints[8] = -2147483133;
    ints[9] = -2147483646;
    ints[10] = -2147483136;
    ints[11] = -2147483103;
    ints[12] = -2147483120;
    ints[13] = -2147482880;
    ints[14] = -2147483126;
    this.Test_Update(ints, ints1, -2147450880, 
                                  -2147483644, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update263()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 129;
    ints[1] = 1;
    this.Test_Update
        (ints, ints1, 1, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update23()
{
    int[] ints = new int[7];
    int[] ints1 = new int[7];
    ints[0] = -2147483646;
    ints[1] = int.MinValue;
    ints[2] = -2147483647;
    ints[3] = -2147483517;
    ints[4] = -2147483388;
    ints[5] = -2147483514;
    ints[6] = -2147483518;
    this.Test_Update
        (ints, ints1, 1, 0, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Update522()
{
    IPexChoiceRecorder choices = PexChoose.Replay.Setup();
    int[] ints = new int[7];
    int[] ints1 = new int[7];
    ints[0] = -2147483639;
    ints[1] = -2147483640;
    ints[2] = -2147483647;
    ints[3] = -2147483644;
    ints[4] = -2147483392;
    ints[5] = -2147483388;
    this.Test_Update
        (ints, ints1, 0, 257, PexChoose.CreateDelegate<Func<int, Optional<int>>>());
}
	}
}
