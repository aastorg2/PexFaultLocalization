// <copyright file="TreeDictionaryTests.Test_Lookup.g.cs">Copyright ©  2008</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace FPTests
{
	public partial class TreeDictionaryTests
	{
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup367()
{
    int[] ints = new int[0];
    int[] ints1 = new int[0];
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup619()
{
    int[] ints = new int[1];
    int[] ints1 = new int[1];
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup25()
{
    int[] ints = new int[2];
    int[] ints1 = new int[2];
    ints[0] = 1;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup843()
{
    int[] ints = new int[2];
    int[] ints1 = new int[2];
    ints[0] = 1;
    ints[1] = 512;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup687()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[1] = 1;
    ints[2] = 2;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup42()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 65;
    ints[1] = 576;
    ints[2] = 1;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup511()
{
    int[] ints = new int[4];
    int[] ints1 = new int[4];
    ints[0] = -2147483632;
    ints[1] = -2147483391;
    ints[2] = -1308622590;
    ints[3] = 1476395526;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup51()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 33;
    ints[1] = 1;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup308()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 387;
    ints[1] = 258;
    ints[2] = 384;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup743()
{
    int[] ints = new int[4];
    int[] ints1 = new int[4];
    ints[0] = -2147483134;
    ints[1] = -2147483613;
    ints[2] = -2147483647;
    ints[3] = -2147483632;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup645()
{
    int[] ints = new int[3];
    int[] ints1 = new int[3];
    ints[0] = 2;
    ints[1] = 67;
    ints[2] = 64;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup656()
{
    int[] ints = new int[6];
    int[] ints1 = new int[6];
    ints[0] = int.MinValue;
    ints[1] = -2147483643;
    ints[2] = -2147483645;
    ints[3] = -2147479552;
    ints[4] = -2147481597;
    ints[5] = -2147483646;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup456()
{
    int[] ints = new int[7];
    int[] ints1 = new int[7];
    ints[0] = -2147483327;
    ints[1] = -2147483324;
    ints[2] = -2147483136;
    ints[3] = -2147482815;
    ints[4] = -2147483135;
    ints[5] = -2147482879;
    ints[6] = -2147483200;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup832()
{
    int[] ints = new int[14];
    int[] ints1 = new int[14];
    ints[0] = -2147483584;
    ints[1] = -2147483644;
    ints[2] = -2147479037;
    ints[3] = int.MinValue;
    ints[4] = -2147467264;
    ints[5] = -2147483647;
    ints[6] = -2147483552;
    ints[7] = -2147483391;
    ints[8] = -2147417463;
    ints[9] = -2147483567;
    ints[10] = -2147483616;
    ints[11] = -2147483568;
    ints[12] = -2147483632;
    ints[13] = -2147483576;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup666()
{
    int[] ints = new int[14];
    int[] ints1 = new int[14];
    ints[0] = -2147483631;
    ints[1] = -2147483643;
    ints[2] = -2147450880;
    ints[3] = int.MinValue;
    ints[4] = -2147352576;
    ints[5] = -2147483644;
    ints[6] = -2147483608;
    ints[7] = -2147483583;
    ints[8] = -2147286007;
    ints[9] = -2147483609;
    ints[10] = -2147483632;
    ints[11] = -2147483616;
    ints[12] = -2147483642;
    ints[13] = -2147483610;
    this.Test_Lookup<int>(ints, ints1);
}
[TestMethod]
[PexGeneratedBy(typeof(TreeDictionaryTests))]
public void Test_Lookup476()
{
    int[] ints = new int[15];
    int[] ints1 = new int[15];
    ints[0] = -2147483644;
    ints[1] = -2147483647;
    ints[2] = -2147483638;
    ints[3] = int.MinValue;
    ints[5] = -2147483639;
    ints[6] = -1073740768;
    ints[7] = -2147483642;
    ints[8] = -2147483610;
    ints[9] = -2147483505;
    ints[10] = -2147483634;
    ints[11] = -2147483611;
    ints[12] = -2147483481;
    ints[13] = -2147483609;
    ints[14] = -2147483612;
    this.Test_Lookup<int>(ints, ints1);
}
	}
}
