// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Edu.Nlu.Sir.Siemens.Replace
{
    public partial class BaseVersionTest
    {
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline990()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline373()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException589()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline133()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline364()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '[';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline989()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = 'c';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline856()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\n';
    cs1[0] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException146()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException520()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '*';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline881()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '!';
    cs1[1] = 'a';
    cs1[98] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline211()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '$';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline381()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\n';
    cs1[0] = '$';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline806()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '?';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline635()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs2[0] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline553()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = 'c';
    cs1[1] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline380()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '%';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline754()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs2[0] = '\uffff';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline936()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\n';
    cs1[0] = '?';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline317()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '$';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline768()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '?';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline913()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '?';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline460()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '!';
    cs1[1] = '\a';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void subline977()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '%';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline436()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '[';
    cs1[1] = 'a';
    cs1[98] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void subline207()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\n';
    cs1[0] = '*';
    cs1[1] = '$';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline922()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    this.subline(cs, cs1, cs2);
}

[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException217()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs[2] = '\u0001';
    cs[3] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    cs1[3] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline993()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs[2] = '\u0001';
    cs[3] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    cs1[3] = 'c';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException168()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs[2] = '\u0001';
    cs[3] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    cs1[3] = '*';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline527()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs[2] = '\u0001';
    cs[3] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    cs1[3] = '*';
    cs1[4] = '*';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException371()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '?';
    cs1[2] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline63()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline838()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0003';
    cs[16] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline612()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs1[0] = 'c';
    cs1[1] = '\u0001';
    cs1[2] = 'c';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException968()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '!';
    cs1[3] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
[Ignore]
[PexDescription("the test state was: system environment exit")]
public void sublineThrowsExitException751()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '[';
    cs1[2] = '\u0004';
    cs1[6] = '\u0001';
    cs1[7] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline611()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '[';
    cs1[3] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline241()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '!';
    cs1[3] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline277()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\n';
    cs1[0] = '*';
    cs1[1] = '!';
    cs1[3] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline640()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '[';
    cs1[2] = '`';
    cs1[98] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline155()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs1[0] = '*';
    cs1[1] = '[';
    cs1[2] = '^';
    cs1[96] = '\u0001';
    cs1[97] = '*';
    cs1[98] = '*';
    cs2[0] = '\uffff';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline179()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0003';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    cs1[3] = '*';
    cs1[4] = 'c';
    cs1[5] = '\u0002';
    cs1[6] = '*';
    cs1[7] = '[';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline01()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs2[0] = '\u0001';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline424()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs[2] = '\u0001';
    cs[3] = '\u0001';
    cs[4] = '\u0001';
    cs[5] = '\u0001';
    cs[6] = '\u0001';
    cs[7] = '\u0001';
    cs[8] = '\u0001';
    cs[9] = '\u0001';
    cs[10] = '\u0001';
    cs[11] = '\u0001';
    cs[12] = '\u0001';
    cs[13] = '\u0001';
    cs[14] = '\u0001';
    cs[15] = '\n';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0001';
    cs1[3] = '*';
    cs1[4] = 'c';
    cs1[6] = '*';
    cs1[7] = '?';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline169()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0003';
    cs[16] = '\u0001';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    cs1[3] = '*';
    cs1[4] = 'c';
    cs1[5] = '\u0002';
    cs1[6] = '!';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline52()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0003';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    cs1[3] = '*';
    cs1[4] = 'c';
    cs1[5] = '\u0002';
    cs1[6] = '%';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline127()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0001';
    cs[1] = '\u0001';
    cs2[0] = '\uffff';
    this.subline(cs, cs1, cs2);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void subline59()
{
    char[] cs = new char[100];
    char[] cs1 = new char[100];
    char[] cs2 = new char[100];
    cs[0] = '\u0002';
    cs[1] = '\u0002';
    cs[2] = '\u0002';
    cs[3] = '\u0002';
    cs[4] = '\u0002';
    cs[5] = '\u0002';
    cs[6] = '\u0002';
    cs[7] = '\u0002';
    cs[8] = '\u0002';
    cs[9] = '\u0002';
    cs[10] = '\u0002';
    cs[11] = '\u0002';
    cs[12] = '\u0002';
    cs[13] = '\u0002';
    cs[14] = '\u0002';
    cs[15] = '\u0003';
    cs1[0] = '*';
    cs1[1] = 'c';
    cs1[2] = '\u0002';
    cs1[3] = '*';
    cs1[4] = 'c';
    cs1[5] = '\u0002';
    cs1[6] = '*';
    cs1[7] = 'c';
    cs1[8] = '\u0002';
    cs1[9] = '*';
    cs1[10] = '$';
    this.subline(cs, cs1, cs2);
}
    }
}
