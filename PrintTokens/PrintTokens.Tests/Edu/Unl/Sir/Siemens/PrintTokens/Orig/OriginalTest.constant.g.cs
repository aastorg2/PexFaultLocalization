// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Edu.Unl.Sir.Siemens.PrintTokens.Orig
{
    public partial class OriginalTest
    {
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant642()
{
    int i;
    i = this.constant(0, (byte[])null, 0);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant32()
{
    int i;
    i = this.constant(28, (byte[])null, 0);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant11()
{
    int i;
    i = this.constant(27, (byte[])null, 0);
    Assert.AreEqual<int>(27, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void constantThrowsNullReferenceException888()
{
    int i;
    i = this.constant(29, (byte[])null, 0);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void constantThrowsIndexOutOfRangeException528()
{
    int i;
    byte[] bs = new byte[0];
    i = this.constant(29, bs, 0);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant595()
{
    int i;
    byte[] bs = new byte[1];
    i = this.constant(29, bs, 2);
    Assert.AreEqual<int>(29, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void constantThrowsIndexOutOfRangeException302()
{
    int i;
    byte[] bs = new byte[0];
    i = this.constant(29, bs, int.MinValue);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant657()
{
    int i;
    byte[] bs = new byte[3];
    i = this.constant(29, bs, 2);
    Assert.AreEqual<int>(29, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant915()
{
    int i;
    byte[] bs = new byte[0];
    i = this.constant(0, bs, int.MinValue);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant148()
{
    int i;
    byte[] bs = new byte[0];
    i = this.constant(27, bs, int.MinValue);
    Assert.AreEqual<int>(27, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant464()
{
    int i;
    byte[] bs = new byte[0];
    i = this.constant(28, bs, int.MinValue);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant801()
{
    int i;
    byte[] bs = new byte[3];
    i = this.constant(0, bs, 2);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void constantThrowsIndexOutOfRangeException309()
{
    int i;
    byte[] bs = new byte[1];
    i = this.constant(29, bs, 0);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant70()
{
    int i;
    byte[] bs = new byte[3];
    i = this.constant(27, bs, 2);
    Assert.AreEqual<int>(27, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void constant931()
{
    int i;
    byte[] bs = new byte[3];
    i = this.constant(28, bs, 2);
    Assert.AreEqual<int>(-1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void constantThrowsIndexOutOfRangeException553()
{
    int i;
    byte[] bs = new byte[3];
    i = this.constant(29, bs, 0);
}
    }
}
