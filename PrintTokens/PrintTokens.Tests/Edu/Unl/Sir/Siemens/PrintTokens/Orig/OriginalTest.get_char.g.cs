// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;
using System.IO;

namespace Edu.Unl.Sir.Siemens.PrintTokens.Orig
{
    public partial class OriginalTest
    {
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void get_charThrowsNullReferenceException155()
{
    byte b;
    b = this.get_char((CharacterStream)null);
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void get_char210()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte b;
      byte[] bs = new byte[80];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[80];
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      b = this.get_char(characterStream);
      disposables.Dispose();
      Assert.AreEqual<byte>((byte)0, b);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void get_char702()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte b;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[2];
      bs1[0] = (byte)1;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      b = this.get_char(characterStream);
      disposables.Dispose();
      Assert.AreEqual<byte>((byte)1, b);
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void get_char832()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte b;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[2];
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      b = this.get_char(characterStream);
      disposables.Dispose();
      Assert.AreEqual<byte>((byte)127, b);
    }
}
    }
}
