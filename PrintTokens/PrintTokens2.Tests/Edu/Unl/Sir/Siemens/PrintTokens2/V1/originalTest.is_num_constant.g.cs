// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Edu.Unl.Sir.Siemens.PrintTokens2.Orig
{
    public partial class originalTest
    {
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void is_num_constantThrowsNullReferenceException494()
{
    int i;
    i = this.is_num_constant((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void is_num_constantThrowsIndexOutOfRangeException148()
{
    int i;
    i = this.is_num_constant("");
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant190()
{
    int i;
    i = this.is_num_constant("\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void is_num_constantThrowsIndexOutOfRangeException781()
{
    int i;
    i = this.is_num_constant("0");
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant267()
{
    int i;
    i = this.is_num_constant("0\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant426()
{
    int i;
    i = this.is_num_constant("0\u0001");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void is_num_constantThrowsIndexOutOfRangeException536()
{
    int i;
    i = this.is_num_constant("00");
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant679()
{
    int i;
    i = this.is_num_constant("00\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant544()
{
    int i;
    i = this.is_num_constant("00\u0001");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void is_num_constantThrowsIndexOutOfRangeException321()
{
    int i;
    i = this.is_num_constant("000");
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant30()
{
    int i;
    i = this.is_num_constant("0\u0001\0\0\0\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant752()
{
    int i;
    i = this.is_num_constant("\u8030\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant479()
{
    int i;
    i = this.is_num_constant("01\u0001\0\0\0\0");
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(originalTest))]
public void is_num_constant6()
{
    int i;
    i = this.is_num_constant("018\0\0\0\0");
    Assert.AreEqual<int>(1, i);
}
    }
}
