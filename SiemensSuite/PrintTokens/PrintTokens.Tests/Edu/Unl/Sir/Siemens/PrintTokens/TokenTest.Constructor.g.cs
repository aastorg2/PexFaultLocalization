// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Edu.Unl.Sir.Siemens.PrintTokens
{
    public partial class TokenTest
    {
[TestMethod]
[PexGeneratedBy(typeof(TokenTest))]
public void Constructor394()
{
    Token token;
    token = this.Constructor();
    Assert.IsNotNull((object)token);
    Assert.IsNotNull((object)(token.token_string));
    Assert.AreEqual<int>(80, token.token_string.Length);
    Assert.AreEqual<byte>((byte)0, token.token_string[0]);
    Assert.AreEqual<byte>((byte)0, token.token_string[1]);
    Assert.AreEqual<byte>((byte)0, token.token_string[2]);
    Assert.AreEqual<byte>((byte)0, token.token_string[3]);
    Assert.AreEqual<byte>((byte)0, token.token_string[4]);
    Assert.AreEqual<byte>((byte)0, token.token_string[5]);
    Assert.AreEqual<byte>((byte)0, token.token_string[6]);
    Assert.AreEqual<byte>((byte)0, token.token_string[7]);
    Assert.AreEqual<byte>((byte)0, token.token_string[8]);
    Assert.AreEqual<byte>((byte)0, token.token_string[9]);
    Assert.AreEqual<byte>((byte)0, token.token_string[10]);
    Assert.AreEqual<byte>((byte)0, token.token_string[11]);
    Assert.AreEqual<byte>((byte)0, token.token_string[12]);
    Assert.AreEqual<byte>((byte)0, token.token_string[13]);
    Assert.AreEqual<byte>((byte)0, token.token_string[14]);
    Assert.AreEqual<byte>((byte)0, token.token_string[15]);
    Assert.AreEqual<byte>((byte)0, token.token_string[16]);
    Assert.AreEqual<byte>((byte)0, token.token_string[17]);
    Assert.AreEqual<byte>((byte)0, token.token_string[18]);
    Assert.AreEqual<byte>((byte)0, token.token_string[19]);
    Assert.AreEqual<byte>((byte)0, token.token_string[20]);
    Assert.AreEqual<byte>((byte)0, token.token_string[21]);
    Assert.AreEqual<byte>((byte)0, token.token_string[22]);
    Assert.AreEqual<byte>((byte)0, token.token_string[23]);
    Assert.AreEqual<byte>((byte)0, token.token_string[24]);
    Assert.AreEqual<byte>((byte)0, token.token_string[25]);
    Assert.AreEqual<byte>((byte)0, token.token_string[26]);
    Assert.AreEqual<byte>((byte)0, token.token_string[27]);
    Assert.AreEqual<byte>((byte)0, token.token_string[28]);
    Assert.AreEqual<byte>((byte)0, token.token_string[29]);
    Assert.AreEqual<byte>((byte)0, token.token_string[30]);
    Assert.AreEqual<byte>((byte)0, token.token_string[31]);
    Assert.AreEqual<byte>((byte)0, token.token_string[32]);
    Assert.AreEqual<byte>((byte)0, token.token_string[33]);
    Assert.AreEqual<byte>((byte)0, token.token_string[34]);
    Assert.AreEqual<byte>((byte)0, token.token_string[35]);
    Assert.AreEqual<byte>((byte)0, token.token_string[36]);
    Assert.AreEqual<byte>((byte)0, token.token_string[37]);
    Assert.AreEqual<byte>((byte)0, token.token_string[38]);
    Assert.AreEqual<byte>((byte)0, token.token_string[39]);
    Assert.AreEqual<byte>((byte)0, token.token_string[40]);
    Assert.AreEqual<byte>((byte)0, token.token_string[41]);
    Assert.AreEqual<byte>((byte)0, token.token_string[42]);
    Assert.AreEqual<byte>((byte)0, token.token_string[43]);
    Assert.AreEqual<byte>((byte)0, token.token_string[44]);
    Assert.AreEqual<byte>((byte)0, token.token_string[45]);
    Assert.AreEqual<byte>((byte)0, token.token_string[46]);
    Assert.AreEqual<byte>((byte)0, token.token_string[47]);
    Assert.AreEqual<byte>((byte)0, token.token_string[48]);
    Assert.AreEqual<byte>((byte)0, token.token_string[49]);
    Assert.AreEqual<byte>((byte)0, token.token_string[50]);
    Assert.AreEqual<byte>((byte)0, token.token_string[51]);
    Assert.AreEqual<byte>((byte)0, token.token_string[52]);
    Assert.AreEqual<byte>((byte)0, token.token_string[53]);
    Assert.AreEqual<byte>((byte)0, token.token_string[54]);
    Assert.AreEqual<byte>((byte)0, token.token_string[55]);
    Assert.AreEqual<byte>((byte)0, token.token_string[56]);
    Assert.AreEqual<byte>((byte)0, token.token_string[57]);
    Assert.AreEqual<byte>((byte)0, token.token_string[58]);
    Assert.AreEqual<byte>((byte)0, token.token_string[59]);
    Assert.AreEqual<byte>((byte)0, token.token_string[60]);
    Assert.AreEqual<byte>((byte)0, token.token_string[61]);
    Assert.AreEqual<byte>((byte)0, token.token_string[62]);
    Assert.AreEqual<byte>((byte)0, token.token_string[63]);
    Assert.AreEqual<byte>((byte)0, token.token_string[64]);
    Assert.AreEqual<byte>((byte)0, token.token_string[65]);
    Assert.AreEqual<byte>((byte)0, token.token_string[66]);
    Assert.AreEqual<byte>((byte)0, token.token_string[67]);
    Assert.AreEqual<byte>((byte)0, token.token_string[68]);
    Assert.AreEqual<byte>((byte)0, token.token_string[69]);
    Assert.AreEqual<byte>((byte)0, token.token_string[70]);
    Assert.AreEqual<byte>((byte)0, token.token_string[71]);
    Assert.AreEqual<byte>((byte)0, token.token_string[72]);
    Assert.AreEqual<byte>((byte)0, token.token_string[73]);
    Assert.AreEqual<byte>((byte)0, token.token_string[74]);
    Assert.AreEqual<byte>((byte)0, token.token_string[75]);
    Assert.AreEqual<byte>((byte)0, token.token_string[76]);
    Assert.AreEqual<byte>((byte)0, token.token_string[77]);
    Assert.AreEqual<byte>((byte)0, token.token_string[78]);
    Assert.AreEqual<byte>((byte)0, token.token_string[79]);
    Assert.AreEqual<int>(0, token.token_id);
}
    }
}
