// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.Pex.Framework.Generated;
using System.IO;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Edu.Unl.Sir.Siemens.PrintTokens
{
    public partial class OriginalTest
    {
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void skip320()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[2];
      bs1[1] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void skip418()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[80];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[80];
      bs1[1] = (byte)127;
      bs1[2] = (byte)127;
      bs1[3] = (byte)127;
      bs1[4] = (byte)127;
      bs1[5] = (byte)127;
      bs1[6] = (byte)127;
      bs1[7] = (byte)127;
      bs1[8] = (byte)127;
      bs1[9] = (byte)127;
      bs1[10] = (byte)127;
      bs1[11] = (byte)127;
      bs1[12] = (byte)127;
      bs1[13] = (byte)127;
      bs1[14] = (byte)127;
      bs1[15] = (byte)127;
      bs1[16] = (byte)127;
      bs1[17] = (byte)127;
      bs1[18] = (byte)127;
      bs1[19] = (byte)127;
      bs1[20] = (byte)127;
      bs1[21] = (byte)127;
      bs1[22] = (byte)127;
      bs1[23] = (byte)127;
      bs1[24] = (byte)127;
      bs1[25] = (byte)127;
      bs1[26] = (byte)127;
      bs1[27] = (byte)127;
      bs1[28] = (byte)127;
      bs1[29] = (byte)127;
      bs1[30] = (byte)127;
      bs1[31] = (byte)127;
      bs1[32] = (byte)127;
      bs1[33] = (byte)127;
      bs1[34] = (byte)127;
      bs1[35] = (byte)127;
      bs1[36] = (byte)127;
      bs1[37] = (byte)127;
      bs1[38] = (byte)127;
      bs1[39] = (byte)127;
      bs1[40] = (byte)127;
      bs1[41] = (byte)127;
      bs1[42] = (byte)127;
      bs1[43] = (byte)127;
      bs1[44] = (byte)127;
      bs1[45] = (byte)127;
      bs1[46] = (byte)127;
      bs1[47] = (byte)127;
      bs1[48] = (byte)127;
      bs1[49] = (byte)127;
      bs1[50] = (byte)127;
      bs1[51] = (byte)127;
      bs1[52] = (byte)127;
      bs1[53] = (byte)127;
      bs1[54] = (byte)127;
      bs1[55] = (byte)127;
      bs1[56] = (byte)127;
      bs1[57] = (byte)127;
      bs1[58] = (byte)127;
      bs1[59] = (byte)127;
      bs1[60] = (byte)127;
      bs1[61] = (byte)127;
      bs1[62] = (byte)127;
      bs1[63] = (byte)127;
      bs1[64] = (byte)127;
      bs1[65] = (byte)127;
      bs1[66] = (byte)127;
      bs1[67] = (byte)127;
      bs1[68] = (byte)127;
      bs1[69] = (byte)127;
      bs1[70] = (byte)127;
      bs1[71] = (byte)127;
      bs1[72] = (byte)127;
      bs1[73] = (byte)127;
      bs1[74] = (byte)127;
      bs1[75] = (byte)127;
      bs1[76] = (byte)127;
      bs1[77] = (byte)127;
      bs1[78] = (byte)127;
      bs1[79] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void skip41801()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[1];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[80];
      bs1[1] = (byte)127;
      bs1[2] = (byte)127;
      bs1[3] = (byte)127;
      bs1[4] = (byte)127;
      bs1[5] = (byte)127;
      bs1[6] = (byte)127;
      bs1[7] = (byte)127;
      bs1[8] = (byte)127;
      bs1[9] = (byte)127;
      bs1[10] = (byte)127;
      bs1[11] = (byte)127;
      bs1[12] = (byte)127;
      bs1[13] = (byte)127;
      bs1[14] = (byte)127;
      bs1[15] = (byte)127;
      bs1[16] = (byte)127;
      bs1[17] = (byte)127;
      bs1[18] = (byte)127;
      bs1[19] = (byte)127;
      bs1[20] = (byte)127;
      bs1[21] = (byte)127;
      bs1[22] = (byte)127;
      bs1[23] = (byte)127;
      bs1[24] = (byte)127;
      bs1[25] = (byte)127;
      bs1[26] = (byte)127;
      bs1[27] = (byte)127;
      bs1[28] = (byte)127;
      bs1[29] = (byte)127;
      bs1[30] = (byte)127;
      bs1[31] = (byte)127;
      bs1[32] = (byte)127;
      bs1[33] = (byte)127;
      bs1[34] = (byte)127;
      bs1[35] = (byte)127;
      bs1[36] = (byte)127;
      bs1[37] = (byte)127;
      bs1[38] = (byte)127;
      bs1[39] = (byte)127;
      bs1[40] = (byte)127;
      bs1[41] = (byte)127;
      bs1[42] = (byte)127;
      bs1[43] = (byte)127;
      bs1[44] = (byte)127;
      bs1[45] = (byte)127;
      bs1[46] = (byte)127;
      bs1[47] = (byte)127;
      bs1[48] = (byte)127;
      bs1[49] = (byte)127;
      bs1[50] = (byte)127;
      bs1[51] = (byte)127;
      bs1[52] = (byte)127;
      bs1[53] = (byte)127;
      bs1[54] = (byte)127;
      bs1[55] = (byte)127;
      bs1[56] = (byte)127;
      bs1[57] = (byte)127;
      bs1[58] = (byte)127;
      bs1[59] = (byte)127;
      bs1[60] = (byte)127;
      bs1[61] = (byte)127;
      bs1[62] = (byte)127;
      bs1[63] = (byte)127;
      bs1[64] = (byte)127;
      bs1[65] = (byte)127;
      bs1[66] = (byte)127;
      bs1[67] = (byte)127;
      bs1[68] = (byte)127;
      bs1[69] = (byte)127;
      bs1[70] = (byte)127;
      bs1[71] = (byte)127;
      bs1[72] = (byte)127;
      bs1[73] = (byte)127;
      bs1[74] = (byte)127;
      bs1[75] = (byte)127;
      bs1[76] = (byte)127;
      bs1[77] = (byte)127;
      bs1[78] = (byte)127;
      bs1[79] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void skip142()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[81];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[81];
      bs1[1] = (byte)127;
      bs1[2] = (byte)127;
      bs1[3] = (byte)127;
      bs1[4] = (byte)127;
      bs1[5] = (byte)127;
      bs1[6] = (byte)127;
      bs1[7] = (byte)127;
      bs1[8] = (byte)127;
      bs1[9] = (byte)127;
      bs1[10] = (byte)127;
      bs1[11] = (byte)127;
      bs1[12] = (byte)127;
      bs1[13] = (byte)127;
      bs1[14] = (byte)127;
      bs1[15] = (byte)127;
      bs1[16] = (byte)127;
      bs1[17] = (byte)127;
      bs1[18] = (byte)127;
      bs1[19] = (byte)127;
      bs1[20] = (byte)127;
      bs1[21] = (byte)127;
      bs1[22] = (byte)127;
      bs1[23] = (byte)127;
      bs1[24] = (byte)127;
      bs1[25] = (byte)127;
      bs1[26] = (byte)127;
      bs1[27] = (byte)127;
      bs1[28] = (byte)127;
      bs1[29] = (byte)127;
      bs1[30] = (byte)127;
      bs1[31] = (byte)127;
      bs1[32] = (byte)127;
      bs1[33] = (byte)127;
      bs1[34] = (byte)127;
      bs1[35] = (byte)127;
      bs1[36] = (byte)127;
      bs1[37] = (byte)127;
      bs1[38] = (byte)127;
      bs1[39] = (byte)127;
      bs1[40] = (byte)127;
      bs1[41] = (byte)127;
      bs1[42] = (byte)127;
      bs1[43] = (byte)127;
      bs1[44] = (byte)127;
      bs1[45] = (byte)127;
      bs1[46] = (byte)127;
      bs1[47] = (byte)127;
      bs1[48] = (byte)127;
      bs1[49] = (byte)127;
      bs1[50] = (byte)127;
      bs1[51] = (byte)127;
      bs1[52] = (byte)127;
      bs1[53] = (byte)127;
      bs1[54] = (byte)127;
      bs1[55] = (byte)127;
      bs1[56] = (byte)127;
      bs1[57] = (byte)127;
      bs1[58] = (byte)127;
      bs1[59] = (byte)127;
      bs1[60] = (byte)127;
      bs1[61] = (byte)127;
      bs1[62] = (byte)127;
      bs1[63] = (byte)127;
      bs1[64] = (byte)127;
      bs1[65] = (byte)127;
      bs1[66] = (byte)127;
      bs1[67] = (byte)127;
      bs1[68] = (byte)127;
      bs1[69] = (byte)127;
      bs1[70] = (byte)127;
      bs1[71] = (byte)127;
      bs1[72] = (byte)127;
      bs1[73] = (byte)127;
      bs1[74] = (byte)127;
      bs1[75] = (byte)127;
      bs1[76] = (byte)127;
      bs1[77] = (byte)127;
      bs1[78] = (byte)127;
      bs1[79] = (byte)127;
      bs1[80] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void skip635()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[2];
      bs1[0] = (byte)1;
      bs1[1] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
public void skip460()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[2];
      bs1[0] = (byte)10;
      bs1[1] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void skip648()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[2];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[80];
      bs1[79] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 0;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void skip308()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[192];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[81];
      bs1[2] = (byte)127;
      bs1[3] = (byte)127;
      bs1[4] = (byte)127;
      bs1[5] = (byte)127;
      bs1[6] = (byte)127;
      bs1[7] = (byte)127;
      bs1[8] = (byte)127;
      bs1[9] = (byte)127;
      bs1[10] = (byte)127;
      bs1[11] = (byte)127;
      bs1[12] = (byte)127;
      bs1[13] = (byte)127;
      bs1[14] = (byte)127;
      bs1[15] = (byte)127;
      bs1[16] = (byte)127;
      bs1[17] = (byte)127;
      bs1[18] = (byte)127;
      bs1[19] = (byte)127;
      bs1[20] = (byte)127;
      bs1[21] = (byte)127;
      bs1[22] = (byte)127;
      bs1[23] = (byte)127;
      bs1[24] = (byte)127;
      bs1[25] = (byte)127;
      bs1[26] = (byte)127;
      bs1[27] = (byte)127;
      bs1[28] = (byte)127;
      bs1[29] = (byte)127;
      bs1[30] = (byte)127;
      bs1[31] = (byte)127;
      bs1[32] = (byte)127;
      bs1[33] = (byte)127;
      bs1[34] = (byte)127;
      bs1[35] = (byte)127;
      bs1[36] = (byte)127;
      bs1[37] = (byte)127;
      bs1[38] = (byte)127;
      bs1[39] = (byte)127;
      bs1[40] = (byte)127;
      bs1[41] = (byte)127;
      bs1[42] = (byte)127;
      bs1[43] = (byte)127;
      bs1[44] = (byte)127;
      bs1[45] = (byte)127;
      bs1[46] = (byte)127;
      bs1[47] = (byte)127;
      bs1[48] = (byte)127;
      bs1[49] = (byte)127;
      bs1[50] = (byte)127;
      bs1[51] = (byte)127;
      bs1[52] = (byte)127;
      bs1[53] = (byte)127;
      bs1[54] = (byte)127;
      bs1[55] = (byte)127;
      bs1[56] = (byte)127;
      bs1[57] = (byte)127;
      bs1[58] = (byte)127;
      bs1[59] = (byte)127;
      bs1[60] = (byte)127;
      bs1[61] = (byte)127;
      bs1[62] = (byte)127;
      bs1[63] = (byte)127;
      bs1[64] = (byte)127;
      bs1[65] = (byte)127;
      bs1[66] = (byte)127;
      bs1[67] = (byte)127;
      bs1[68] = (byte)127;
      bs1[69] = (byte)127;
      bs1[70] = (byte)127;
      bs1[71] = (byte)127;
      bs1[72] = (byte)127;
      bs1[73] = (byte)127;
      bs1[74] = (byte)127;
      bs1[75] = (byte)127;
      bs1[76] = (byte)127;
      bs1[77] = (byte)127;
      bs1[78] = (byte)127;
      bs1[79] = (byte)127;
      bs1[80] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 1;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
[TestMethod]
[PexGeneratedBy(typeof(OriginalTest))]
[Ignore]
[PexDescription("the test state was: path bounds exceeded")]
public void skip156()
{
    using (PexDisposableContext disposables = PexDisposableContext.Create())
    {
      MemoryStream memoryStream;
      CharacterStream characterStream;
      byte[] bs = new byte[102];
      memoryStream = new MemoryStream(bs, false);
      disposables.Add((IDisposable)memoryStream);
      byte[] bs1 = new byte[96];
      bs1[0] = (byte)127;
      bs1[2] = (byte)127;
      bs1[3] = (byte)127;
      bs1[4] = (byte)127;
      bs1[5] = (byte)127;
      bs1[6] = (byte)127;
      bs1[7] = (byte)127;
      bs1[8] = (byte)127;
      bs1[9] = (byte)127;
      bs1[10] = (byte)127;
      bs1[11] = (byte)127;
      bs1[12] = (byte)127;
      bs1[13] = (byte)127;
      bs1[14] = (byte)127;
      bs1[15] = (byte)127;
      bs1[16] = (byte)127;
      bs1[17] = (byte)127;
      bs1[18] = (byte)127;
      bs1[19] = (byte)127;
      bs1[20] = (byte)127;
      bs1[21] = (byte)127;
      bs1[22] = (byte)127;
      bs1[23] = (byte)127;
      bs1[24] = (byte)127;
      bs1[25] = (byte)127;
      bs1[26] = (byte)127;
      bs1[27] = (byte)127;
      bs1[28] = (byte)127;
      bs1[29] = (byte)127;
      bs1[30] = (byte)127;
      bs1[31] = (byte)127;
      bs1[32] = (byte)127;
      bs1[33] = (byte)127;
      bs1[34] = (byte)127;
      bs1[35] = (byte)127;
      bs1[36] = (byte)127;
      bs1[37] = (byte)127;
      bs1[38] = (byte)127;
      bs1[39] = (byte)127;
      bs1[40] = (byte)127;
      bs1[41] = (byte)127;
      bs1[42] = (byte)127;
      bs1[43] = (byte)127;
      bs1[44] = (byte)127;
      bs1[45] = (byte)127;
      bs1[46] = (byte)127;
      bs1[47] = (byte)127;
      bs1[48] = (byte)127;
      bs1[49] = (byte)127;
      bs1[50] = (byte)127;
      bs1[51] = (byte)127;
      bs1[52] = (byte)127;
      bs1[53] = (byte)127;
      bs1[54] = (byte)127;
      bs1[55] = (byte)127;
      bs1[56] = (byte)127;
      bs1[57] = (byte)127;
      bs1[58] = (byte)127;
      bs1[59] = (byte)127;
      bs1[60] = (byte)127;
      bs1[61] = (byte)127;
      bs1[62] = (byte)127;
      bs1[63] = (byte)127;
      bs1[64] = (byte)127;
      bs1[65] = (byte)127;
      bs1[66] = (byte)127;
      bs1[67] = (byte)127;
      bs1[68] = (byte)127;
      bs1[69] = (byte)127;
      bs1[70] = (byte)127;
      bs1[71] = (byte)127;
      bs1[72] = (byte)127;
      bs1[73] = (byte)127;
      bs1[74] = (byte)127;
      bs1[75] = (byte)127;
      bs1[76] = (byte)127;
      bs1[77] = (byte)127;
      bs1[78] = (byte)127;
      bs1[79] = (byte)127;
      bs1[80] = (byte)127;
      bs1[81] = (byte)127;
      bs1[82] = (byte)127;
      bs1[83] = (byte)127;
      bs1[84] = (byte)127;
      bs1[85] = (byte)127;
      bs1[86] = (byte)127;
      bs1[87] = (byte)127;
      bs1[88] = (byte)127;
      bs1[89] = (byte)127;
      bs1[90] = (byte)127;
      bs1[91] = (byte)127;
      bs1[92] = (byte)127;
      bs1[93] = (byte)127;
      bs1[94] = (byte)127;
      bs1[95] = (byte)127;
      characterStream = new CharacterStream();
      characterStream.fp = (Stream)memoryStream;
      characterStream.stream_ind = 1;
      characterStream.stream = bs1;
      this.skip(characterStream);
      disposables.Dispose();
    }
}
    }
}
