// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace schedule
{
    public partial class ProgramTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ProgramTest))]
public void append_ele309()
{
    LinkedList<Ele> linkedList;
    linkedList = this.append_ele((LinkedList<Ele>)null, (Ele)null);
    Assert.IsNotNull((object)linkedList);
    Assert.AreEqual<int>(1, linkedList.Count);
    Assert.IsNotNull(linkedList.First);
    Assert.IsNotNull(linkedList.First.List);
    Assert.IsTrue(object.ReferenceEquals(linkedList.First.List, (object)linkedList));
    Assert.IsNull(linkedList.First.Next);
    Assert.IsNull(linkedList.First.Previous);
    Assert.IsNull(linkedList.First.Value);
    Assert.IsNotNull(linkedList.Last);
    Assert.IsTrue(object.ReferenceEquals(linkedList.Last, linkedList.First));
}
[TestMethod]
[PexGeneratedBy(typeof(ProgramTest))]
public void append_ele260()
{
    LinkedList<Ele> linkedList;
    LinkedList<Ele> linkedList1;
    Ele[] eles = new Ele[0];
    linkedList = new LinkedList<Ele>((IEnumerable<Ele>)eles);
    linkedList1 = this.append_ele(linkedList, (Ele)null);
    Assert.IsNotNull((object)linkedList1);
    Assert.AreEqual<int>(1, linkedList1.Count);
    Assert.IsNotNull(linkedList1.First);
    Assert.IsNotNull(linkedList1.First.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList1.First.List, (object)linkedList1));
    Assert.IsNull(linkedList1.First.Next);
    Assert.IsNull(linkedList1.First.Previous);
    Assert.IsNull(linkedList1.First.Value);
    Assert.IsNotNull(linkedList1.Last);
    Assert.IsTrue(object.ReferenceEquals(linkedList1.Last, linkedList1.First));
}
[TestMethod]
[PexGeneratedBy(typeof(ProgramTest))]
public void append_ele611()
{
    LinkedList<Ele> linkedList;
    LinkedList<Ele> linkedList1;
    Ele[] eles = new Ele[1];
    linkedList = new LinkedList<Ele>((IEnumerable<Ele>)eles);
    linkedList1 = this.append_ele(linkedList, (Ele)null);
    Assert.IsNotNull((object)linkedList1);
    Assert.AreEqual<int>(2, linkedList1.Count);
    Assert.IsNotNull(linkedList1.First);
    Assert.IsNotNull(linkedList1.First.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList1.First.List, (object)linkedList1));
    Assert.IsNotNull(linkedList1.First.Next);
    Assert.IsNotNull(linkedList1.First.Next.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList1.First.Next.List, (object)linkedList1));
    Assert.IsNull(linkedList1.First.Next.Next);
    Assert.IsNotNull(linkedList1.First.Next.Previous);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList1.First.Next.Previous, linkedList1.First));
    Assert.IsNull(linkedList1.First.Next.Value);
    Assert.IsNull(linkedList1.First.Previous);
    Assert.IsNull(linkedList1.First.Value);
    Assert.IsNotNull(linkedList1.Last);
    Assert.IsTrue(object.ReferenceEquals(linkedList1.Last, linkedList1.First.Next));
}
[TestMethod]
[PexGeneratedBy(typeof(ProgramTest))]
public void append_ele26001()
{
    LinkedList<Ele> linkedList;
    LinkedList<Ele> linkedList1;
    LinkedList<Ele> linkedList2;
    Ele[] eles = new Ele[0];
    linkedList = new LinkedList<Ele>((IEnumerable<Ele>)eles);
    linkedList1 = new LinkedList<Ele>((IEnumerable<Ele>)linkedList);
    linkedList2 = this.append_ele(linkedList1, (Ele)null);
    Assert.IsNotNull((object)linkedList2);
    Assert.AreEqual<int>(1, linkedList2.Count);
    Assert.IsNotNull(linkedList2.First);
    Assert.IsNotNull(linkedList2.First.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList2.First.List, (object)linkedList2));
    Assert.IsNull(linkedList2.First.Next);
    Assert.IsNull(linkedList2.First.Previous);
    Assert.IsNull(linkedList2.First.Value);
    Assert.IsNotNull(linkedList2.Last);
    Assert.IsTrue(object.ReferenceEquals(linkedList2.Last, linkedList2.First));
}
[TestMethod]
[PexGeneratedBy(typeof(ProgramTest))]
public void append_ele61101()
{
    LinkedList<Ele> linkedList;
    LinkedList<Ele> linkedList1;
    LinkedList<Ele> linkedList2;
    Ele[] eles = new Ele[1];
    linkedList = new LinkedList<Ele>((IEnumerable<Ele>)eles);
    linkedList1 = new LinkedList<Ele>((IEnumerable<Ele>)linkedList);
    linkedList2 = this.append_ele(linkedList1, (Ele)null);
    Assert.IsNotNull((object)linkedList2);
    Assert.AreEqual<int>(2, linkedList2.Count);
    Assert.IsNotNull(linkedList2.First);
    Assert.IsNotNull(linkedList2.First.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList2.First.List, (object)linkedList2));
    Assert.IsNotNull(linkedList2.First.Next);
    Assert.IsNotNull(linkedList2.First.Next.List);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList2.First.Next.List, (object)linkedList2));
    Assert.IsNull(linkedList2.First.Next.Next);
    Assert.IsNotNull(linkedList2.First.Next.Previous);
    Assert.IsTrue
        (object.ReferenceEquals(linkedList2.First.Next.Previous, linkedList2.First));
    Assert.IsNull(linkedList2.First.Next.Value);
    Assert.IsNull(linkedList2.First.Previous);
    Assert.IsNull(linkedList2.First.Value);
    Assert.IsNotNull(linkedList2.Last);
    Assert.IsTrue(object.ReferenceEquals(linkedList2.Last, linkedList2.First.Next));
}
    }
}
