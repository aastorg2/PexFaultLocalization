// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Edu.Nlu.Sir.Siemens.TotInfo
{
    public partial class BaseVersionTest
    {
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl120()
{
    double d;
    long[] ls = new long[0];
    int i = 0;
    d = this.InfoTbl(0, 0, ls, out i);
    Assert.AreEqual<double>(-3, d);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl667()
{
    double d;
    long[] ls = new long[0];
    int i = 0;
    d = this.InfoTbl(2, 0, ls, out i);
    Assert.AreEqual<double>(-3, d);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl36()
{
    double d;
    long[] ls = new long[1];
    int i = 0;
    ls[0] = 1L;
    d = this.InfoTbl(1, 1, ls, out i);
    Assert.AreEqual<double>(-3, d);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl22()
{
    double d;
    long[] ls = new long[3];
    int i = 0;
    ls[0] = 1L;
    ls[1] = 1L;
    ls[2] = 1L;
    d = this.InfoTbl(-2147483645, 3, ls, out i);
    Assert.AreEqual<double>(-3, d);
    Assert.AreEqual<int>(0, i);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl834()
{
    double d;
    long[] ls = new long[7];
    int i = 0;
    ls[0] = 1L;
    ls[1] = 1L;
    ls[2] = 1L;
    ls[3] = 1L;
    ls[4] = 1L;
    ls[5] = 1L;
    ls[6] = 1L;
    d = this.InfoTbl(2, 2, ls, out i);
    Assert.AreEqual<double>(-8.8817841970012523E-16, d);
    Assert.AreEqual<int>(1, i);
}
[TestMethod]
[PexGeneratedBy(typeof(BaseVersionTest))]
public void InfoTbl456()
{
    double d;
    long[] ls = new long[20];
    int i = 0;
    ls[0] = 1L;
    ls[1] = 17592186044416L;
    ls[2] = 1L;
    ls[3] = 16L;
    ls[4] = 1L;
    ls[5] = 8L;
    ls[6] = 8L;
    ls[7] = 2L;
    ls[8] = 2L;
    ls[9] = 2L;
    ls[10] = 1L;
    ls[11] = 1L;
    ls[12] = 4L;
    ls[13] = 1L;
    ls[14] = 2L;
    ls[15] = 1L;
    ls[16] = 1L;
    ls[17] = 1L;
    ls[18] = 1L;
    ls[19] = 2L;
    d = this.InfoTbl(2, 2, ls, out i);
    Assert.AreEqual<double>(-1, d);
    Assert.AreEqual<int>(1, i);
}
    }
}
